<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Refraction Rendering</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="7f44f475-cacd-42d1-8c7d-db6429029245" /><meta name="Description" content="The contain a RefractionSample, which demonstrates a few interesting aspects:" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0a8eb9ca-74ae-4746-9289-93d909b07e22.htm" title="DigitalRune Graphics" tocid="0a8eb9ca-74ae-4746-9289-93d909b07e22">DigitalRune Graphics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7a376fe-d747-4c66-ad76-2bc95232af85.htm" title="Articles" tocid="a7a376fe-d747-4c66-ad76-2bc95232af85">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a089a32a-ee98-4490-8a3c-9df6beb0b1c1.htm" title="How To: Add DigitalRune Graphics to a Project" tocid="a089a32a-ee98-4490-8a3c-9df6beb0b1c1">How To: Add DigitalRune Graphics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="578746ac-7e3c-42b5-b9c9-6900714c966e.htm" title="How To: Add a Custom Scene Node" tocid="578746ac-7e3c-42b5-b9c9-6900714c966e">How To: Add a Custom Scene Node</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="66ba3eee-84a2-4ff2-935f-77b0afa44a89.htm" title="How To: Change Effect Parameter Bindings" tocid="66ba3eee-84a2-4ff2-935f-77b0afa44a89">How To: Change Effect Parameter Bindings</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c2b20686-df99-4d21-b5b6-fd7d58a5f407.htm" title="How To: Add Support for New Effect Parameters" tocid="c2b20686-df99-4d21-b5b6-fd7d58a5f407">How To: Add Support for New Effect Parameters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="12ff9049-3aea-4b01-affe-3aa37eea9ce2.htm" title="Cloud Quads" tocid="12ff9049-3aea-4b01-affe-3aa37eea9ce2">Cloud Quads</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1683bd3a-951a-4e79-b43e-ed0f3ee00e31.htm" title="Environment Map Reflections" tocid="1683bd3a-951a-4e79-b43e-ed0f3ee00e31">Environment Map Reflections</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9a8c8b37-b996-477a-aeab-5d92714be3ca.htm" title="Material Capture (MatCap) Shaders" tocid="9a8c8b37-b996-477a-aeab-5d92714be3ca">Material Capture (MatCap) Shaders</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c9764263-9fc9-43cf-86cb-11daa5090dc2.htm" title="Parallax Mapping" tocid="c9764263-9fc9-43cf-86cb-11daa5090dc2">Parallax Mapping</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="7f44f475-cacd-42d1-8c7d-db6429029245.htm" title="Refraction Rendering" tocid="7f44f475-cacd-42d1-8c7d-db6429029245">Refraction Rendering</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="fa431d48-b457-4c70-a590-d44b0840ab1e.htm" title="Screen-Door Transparency" tocid="fa431d48-b457-4c70-a590-d44b0840ab1e">Screen-Door Transparency</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Refraction Rendering</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                The <a href="dde51686-4f07-4c54-95d4-756ec929cb57.htm">Samples</a>
                contain a <span class="term">RefractionSample</span>,
                which demonstrates a few interesting aspects:
            </p><ul><li>
                    How to extend the default
                    <a href="1782e7fc-9a12-dd2d-d73d-8396a786fdeb.htm">MeshRenderer</a>
                    class.
                </li><li>
                    How to create a refraction effect.
                </li><li>
                    How to create a chromatic dispersion effect.
                </li><li>
                    How to create fake reflections.
                </li></ul><p>
                This article provides additional background information and explanations.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Screenshot">Screenshot</a></li><li class="outlineSectionEntry"><a href="#Material">Material</a></li><li class="outlineSectionEntry"><a href="#MeshRenderer">Extending the MeshRenderer</a></li><li class="outlineSectionEntry"><a href="#Refraction">Refraction</a></li><li class="outlineSectionEntry"><a href="#ChromaticDispersion">Chromatic dispersion</a></li><li class="outlineSectionEntry"><a href="#FakeReflections">Fake reflections</a></li><li class="outlineSectionEntry"><a href="#References">References</a></li></ul></div><div class="collapsibleAreaRegion" id="Screenshot"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Screenshot</span></div><div id="ID0RBSection" class="collapsibleSection"><div class="mediaNear"><img alt="Refraction" src="../media/Refraction.jpg" /><div class="caption">Screenshot: RefractionSample</div></div></div><div class="collapsibleAreaRegion" id="Material"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Material</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    The Dude models in the RefractionSample are rendered using a custom effect. Here
                    is one of the materials (*.drmat file):
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAGAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EABAGAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span><span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Material</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Pass</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"AlphaBlend"</span> <span class="highlight-xml-attribute-name">Effect</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Refraction.fx"</span> <span class="highlight-xml-attribute-name">Profile</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"HiDef"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameter</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Tint"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0.7,0.7,0.9"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameter</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"RefractionIndices"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0.4,0.6,0.8"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameter</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"RefractionStrength"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0.04"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameter</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FresnelParameters"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0,1,3"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameter</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Alpha"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameter</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BlendMode"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Texture</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"NormalTexture"</span> <span class="highlight-xml-attribute-name">Format</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Normal"</span> <span class="highlight-xml-attribute-name">File</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"upBodyN.tga"</span> <span class="highlight-xml-bracket">/&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Pass</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Material</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAGAAA");</script><p>
                    The render pass is called "AlphaBlend". This is the name that the deferred lighting
                    graphics screen uses for forward rendered, transparent objects. The effect is
                    <em>Refraction.fx</em>,
                    which is a custom effect included in the sample.
                </p></div><div class="collapsibleAreaRegion" id="MeshRenderer"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extending the MeshRenderer</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    To create the refraction effect, the Refraction.fx shader needs to sample a texture
                    which contains the current scene. Such a texture is usually not available. Therefore,
                    the sample implements a new mesh renderer class derived from the default
                    <a href="1782e7fc-9a12-dd2d-d73d-8396a786fdeb.htm">MeshRenderer</a>.
                    Before the new renderer draws a mesh, it checks whether the mesh has an effect
                    parameter with the semantic
                    <a href="f5012065-6531-5577-8d74-a1a9f865292a.htm">SourceTexture</a>.
                    If so, the renderer gets the current render target and stores it in the
                    <a href="a79b5836-820d-ace2-7ff1-7a8f4f3710a6.htm">SourceTexture</a>
                    property of the
                    <a href="ea575bf4-8a2a-e02a-be92-c5821bff1ad7.htm">RenderContext</a>.
                    Since, a shader cannot read from and write to the same render target, the renderer sets
                    a new output render target. The source texture and depth buffer content is copied to
                    the new render target, and then the mesh is rendered.
                </p><p>
                    Using this approach, every refracting mesh can sample an up-to-date version of the
                    back buffer. A refracting mesh can even refract another refracting mesh. (When you look
                    closely at the screenshot above, you can see that there is actually another Dude behind
                    the right Dude.)
                </p><p>
                    Resolving the current scene and copying it to a new render target is costly. To improve
                    performance, we could get the source texture only once, before all transparent meshes are
                    rendered. This is faster, but would prevent multiple refractions.
                </p></div><div class="collapsibleAreaRegion" id="Refraction"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Refraction</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
                    When the refraction shader renders a pixel, it samples the source texture containing the
                    current scene. Instead of sampling the texel that is directly behind the model, it uses
                    the surface normal to refract the view ray and offsets the sample position.
                </p><p>
                    For a more realistic effect we would have to:
                </p><ol><li>
                        Refract the view ray at the front faces of the model. (Entry point)
                    </li><li>
                        Follow the ray and refract it a second time at the back faces of the model.
                        (Exit point) (Note: A concave mesh can have multiple entry and exit points!)
                    </li><li>
                        Calculate the exact intersection of the ray with the background geometry.
                    </li></ol><p>
                    However, "fake" refractions using a simple displacement usually work fine in games. More
                    realistic solutions are often too expensive.
                </p><h4 class="subHeading" id="KnownIssues">Known issues</h4><div class="subsection"><p>
                            Concave models, such as the Dude model, can cause problems. Take a look at the left
                            character in the screenshot: The left arm should be occluded by the torso, but it
                            appears to be in front. This happens because the triangles are rendered in arbitrary
                            order without depth sorting. There are a few ways to deal with this problem:
                        </p><ol><li>
                                Ignore it. – A popular strategy for computer graphics in games. ;-)
                            </li><li>
                                Implement order-independent transparency [1].
                            </li><li>
                                Reduce the alpha value of the model. - This make the error less noticeable.
                                However, this will also make the normal non-refracted background shine through.
                            </li></ol></div></div><div class="collapsibleAreaRegion" id="ChromaticDispersion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Chromatic dispersion</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
                    In the screenshot, you can see a rainbow coloring of some of the refracted background.
                    This occurs in reality because the refraction index depends on the wavelength. In other
                    words: Different colors (wavelengths) of the light are refracted differently.
                </p><p>
                    This effect is easy to achieve. You only need to sample 3 different positions in the
                    source texture. Take the red value of one sample, the green value of the other sample and
                    the blue value of the third sample. The Refraction.fx effect uses different refraction
                    indices for red, green and blue to control the sample positions. The differences of the
                    refraction indices are exaggerated to make the effect more pronounced.
                </p></div><div class="collapsibleAreaRegion" id="FakeReflections"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fake reflections</span></div><div id="ID6RBSection" class="collapsibleSection"><p>
                    The last component of the effect are reflections. For example, the fire on the left is
                    reflected in the Dude on the right. This effect is very simple: We compute the reflection
                    vector and make a texture lookup in the source texture using a sphere mapping. – This
                    is obviously not physically correct, but it creates an interesting effect.
                </p><p>
                    A Fresnel term is used to lerp between reflections and refractions. Reflections are
                    important if we want to give the material a glass like quality.
                </p></div><div class="collapsibleAreaRegion" id="References"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />References</span></div><div id="ID7RBSection" class="collapsibleSection"><ul class="noBullet"><li>
                        [1] Order-independent transparency. Wikipedia,
                        <a href="http://en.wikipedia.org/wiki/Order-independent_transparency" target="_blank">http://en.wikipedia.org/wiki/Order-independent_transparency</a></li><li>
                        [2] Dispersion (optics). Wikipedia,
                        <a href="http://en.wikipedia.org/wiki/Dispersion_(optics)" target="_blank">http://en.wikipedia.org/wiki/Dispersion_(optics)</a></li></ul></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>