<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Step 9: Animated Model</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="cdc88d41-dcb6-4464-be17-46d29a15d25a" /><meta name="Description" content="In this step we will enable playback of animations." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d94d3673-de15-47f9-a122-70b4d97b5920.htm" title="General" tocid="d94d3673-de15-47f9-a122-70b4d97b5920">General</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4d7ccf95-54e8-4b4c-950f-9420947b4e24.htm" title="Tutorials" tocid="4d7ccf95-54e8-4b4c-950f-9420947b4e24">Tutorials</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6ce9b230-eed2-419d-92df-3e3e4a03d27e.htm" title="Tutorial 01: Adding DigitalRune Engine to an XNA Game" tocid="6ce9b230-eed2-419d-92df-3e3e4a03d27e">Tutorial 01: Adding DigitalRune Engine to an XNA Game</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8befb151-f7b6-4884-936b-530458b13860.htm" title="Step 1: Setup" tocid="8befb151-f7b6-4884-936b-530458b13860">Step 1: Setup</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="25418622-e634-4741-8d17-efc9fb44fba7.htm" title="Step 2: Empty game" tocid="25418622-e634-4741-8d17-efc9fb44fba7">Step 2: Empty game</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0c04e065-a5fb-4045-bc09-7cce47c63d4e.htm" title="Step 3: Input service" tocid="0c04e065-a5fb-4045-bc09-7cce47c63d4e">Step 3: Input service</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="26ebc8f3-4778-4979-a217-1d85e2c5ae31.htm" title="Step 4: Graphics service" tocid="26ebc8f3-4778-4979-a217-1d85e2c5ae31">Step 4: Graphics service</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="efe7ad45-ea74-4e57-810d-93bc3ef3a28f.htm" title="Step 5: Debug rendering" tocid="efe7ad45-ea74-4e57-810d-93bc3ef3a28f">Step 5: Debug rendering</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="da752ba9-7056-4485-9b90-d6070cb7c1e8.htm" title="Step 6: Game object service" tocid="da752ba9-7056-4485-9b90-d6070cb7c1e8">Step 6: Game object service</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="53ee55e3-b4a5-42cc-b47d-88d18b9de2f5.htm" title="Step 7: Model content" tocid="53ee55e3-b4a5-42cc-b47d-88d18b9de2f5">Step 7: Model content</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="253857cc-d401-4788-ae6e-4ca12a94a21e.htm" title="Step 8: Rendering models" tocid="253857cc-d401-4788-ae6e-4ca12a94a21e">Step 8: Rendering models</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="cdc88d41-dcb6-4464-be17-46d29a15d25a.htm" title="Step 9: Animated Model" tocid="cdc88d41-dcb6-4464-be17-46d29a15d25a">Step 9: Animated Model</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a1c6f3cc-8a48-4c68-9401-421d36f67eba.htm" title="Step 10: More debug rendering" tocid="a1c6f3cc-8a48-4c68-9401-421d36f67eba">Step 10: More debug rendering</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="dd394bdc-c9ec-442a-929d-7141f7b301ae.htm" title="Step 11: Physics" tocid="dd394bdc-c9ec-442a-929d-7141f7b301ae">Step 11: Physics</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="aa0a6f8f-d355-4188-9d4a-7041160411d1.htm" title="Step 12: Particles" tocid="aa0a6f8f-d355-4188-9d4a-7041160411d1">Step 12: Particles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c060be3d-f85f-4551-838c-6969ab45b0b4.htm" title="Step 13: Sky box" tocid="c060be3d-f85f-4551-838c-6969ab45b0b4">Step 13: Sky box</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="68c9f201-aa9c-4b7f-bf96-a57893faddfe.htm" title="Step 14: Post-processing" tocid="68c9f201-aa9c-4b7f-bf96-a57893faddfe">Step 14: Post-processing</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b035aaae-87fb-48c6-86de-e30024ec9a89.htm" title="Step 15: Add DigitalRune Graphics content" tocid="b035aaae-87fb-48c6-86de-e30024ec9a89">Step 15: Add DigitalRune Graphics content</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="77f82858-2022-41f9-9325-9a4d97b5450d.htm" title="Step 16: GUI" tocid="77f82858-2022-41f9-9325-9a4d97b5450d">Step 16: GUI</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7f0f5338-019d-4ef1-a579-3d99df4e1aa2.htm" title="Step 17: Deferred lighting" tocid="7f0f5338-019d-4ef1-a579-3d99df4e1aa2">Step 17: Deferred lighting</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Step 9: Animated Model</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                In this step we will enable playback of animations.
            </p></div><div class="collapsibleAreaRegion" id="AnimationManager"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Add animation service</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    Let's add the animation service to <em>Game1.cs</em>:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABAEAAA_tab1" class="codeSnippetContainerTabSingle">Game1.cs</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">…
<span class="highlight-keyword">using</span> DigitalRune.Animation;                                                          <span class="highlight-comment">// NEW</span>
…

<span class="highlight-keyword">namespace</span> MyGame
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Game1 : Microsoft.Xna.Framework.Game
    {
        …
        <span class="highlight-keyword">private</span> AnimationManager _animationManager;                                   <span class="highlight-comment">// NEW</span>
        …

        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> Initialize()
        {
            …
            _gameObjectManager = <span class="highlight-keyword">new</span> GameObjectManager();
            _services.Register(<span class="highlight-keyword">typeof</span>(IGameObjectService), <span class="highlight-keyword">null</span>, _gameObjectManager);

            _animationManager = <span class="highlight-keyword">new</span> AnimationManager();                               <span class="highlight-comment">// NEW</span>
            _services.Register(<span class="highlight-keyword">typeof</span>(IAnimationService), <span class="highlight-keyword">null</span>, _animationManager);   <span class="highlight-comment">// NEW</span>

            Components.Add(<span class="highlight-keyword">new</span> MyGameComponent(<span class="highlight-keyword">this</span>));

            <span class="highlight-keyword">base</span>.Initialize();
        }

        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> Update(GameTime gameTime)
        {
            _inputManager.Update(gameTime.ElapsedGameTime);

            <span class="highlight-keyword">base</span>.Update(gameTime);

            _gameObjectManager.Update(gameTime.ElapsedGameTime);

            _animationManager.Update(gameTime.ElapsedGameTime);                       <span class="highlight-comment">// NEW</span>
            _animationManager.ApplyAnimations();                                      <span class="highlight-comment">// NEW</span>
        }
        …</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAEAAA");</script><p>
                    The animation service is similar to the other service – only the update consists
                    of two parts. <strong>AnimationManager.Update</strong> computes the animations
                    but it does not change the animated objects. <strong>AnimationManager.ApplyAnimations</strong>
                    applies the changes to the animated objects. This separation is only relevant for
                    multithreaded game loops. For beginners it is best to call these methods in immediate
                    succession, as shown above.
                </p></div><div class="collapsibleAreaRegion" id="Dude"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Load Dude model</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    Next, we create a new game object <em>DudeObject.cs</em>, which
                    loads the Dude model:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFADAAA_tab1" class="codeSnippetContainerTabSingle">DudeObject.cs</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAFADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Linq;
<span class="highlight-keyword">using</span> DigitalRune.Animation;
<span class="highlight-keyword">using</span> DigitalRune.Animation.Character;
<span class="highlight-keyword">using</span> DigitalRune.Game;
<span class="highlight-keyword">using</span> DigitalRune.Graphics.SceneGraph;
<span class="highlight-keyword">using</span> Microsoft.Practices.ServiceLocation;
<span class="highlight-keyword">using</span> Microsoft.Xna.Framework;

<span class="highlight-keyword">namespace</span> MyGame
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DudeObject : GameObject
    {
        <span class="highlight-keyword">private</span> ModelNode _modelNode;
        <span class="highlight-keyword">private</span> AnimationController _animationController;

        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnLoad()
        {
            <span class="highlight-keyword">var</span> game = ServiceLocator.Current.GetInstance&lt;Game&gt;();
            <span class="highlight-keyword">var</span> scene = ServiceLocator.Current.GetInstance&lt;IScene&gt;();

            _modelNode = game.Content.Load&lt;ModelNode&gt;(<span class="highlight-literal">"Dude/Dude"</span>).Clone();
            scene.Children.Add(_modelNode);

            <span class="highlight-comment">// Create looping animation.</span>
            <span class="highlight-keyword">var</span> meshNode = (MeshNode)_modelNode.Children[<span class="highlight-number">0</span>];   <span class="highlight-comment">// The dude model has a single mesh node as its child.</span>
            <span class="highlight-keyword">var</span> animations = meshNode.Mesh.Animations;
            <span class="highlight-keyword">var</span> animationClip = <span class="highlight-keyword">new</span> AnimationClip&lt;SkeletonPose&gt;(animations.Values.First())
            {
                LoopBehavior = LoopBehavior.Cycle,  <span class="highlight-comment">// Repeat animation…</span>
                Duration = TimeSpan.MaxValue,       <span class="highlight-comment">// …forever.</span>
            };

            <span class="highlight-comment">// Start animation.</span>
            <span class="highlight-keyword">var</span> animationService = ServiceLocator.Current.GetInstance&lt;IAnimationService&gt;();
            _animationController = animationService.StartAnimation(animationClip, (IAnimatableProperty)meshNode.SkeletonPose);
        }


        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnUnload()
        {
            _animationController.Stop();
            _animationController.Recycle();

            _modelNode.Parent.Children.Remove(_modelNode);
            _modelNode.Dispose(<span class="highlight-keyword">false</span>);
            _modelNode = <span class="highlight-keyword">null</span>;
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFADAAA");</script><p>
                    This game object loads the model, clones it and adds it to the scene. A model consists
                    of a <strong>ModelNode</strong>, which has one or more child nodes. Child
                    nodes can be of type <strong>MeshNode</strong>, <strong>LightNode</strong>,
                    etc. Most models, such as the <em>Dude.fbx</em>, contain a single
                    <strong>MeshNode</strong>.
                </p><p>
                    Next, we need to get the animations of the model.  Animations are always stored per
                    mesh. We get the first animation of the mesh, which in this case is a walk animation.
                    To loop the animation we need to create an <strong>AnimationClip</strong>.
                </p><p>
                    Then the animation is started using the animation service. The animation is applied
                    to the <strong>SkeletonPose</strong> of the <strong>MeshNode</strong>.
                </p><p>
                    From now on the animation service will play the walk cycle forever – or until we
                    stop it manually. <strong>IAnimationService.StartAnimation</strong> returns
                    an <strong>AnimationController</strong>, which we can use to stop the animation.
                </p><p>
                    If we run the game, the dude model is shown, but it is huge and not animated. Let's fix this.
                </p></div><div class="collapsibleAreaRegion" id="XML"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Changing *.drmdl and *.drmat files</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    If you open the Windows File Explorer browse to the folder of the Dude model, you
                    should see a few new files with the file extensions drmdl and drmat.
                </p><div class="mediaNear"><img alt="Tutorial-01-16" src="../media/Tutorial-01-16.png" /></div><p>
                    These files were automatically created when the XNA content pipeline processed
                    <em>Dude.fbx</em>.
                </p><p>
                    (For some models these files are not created automatically. In this case you have
                    to create them manually. Copy an existing *.drmdl and *.drmat file from the DigitalRune
                    samples and use them as a starting point.)
                </p><p>
                    To change the scale of the Dude model, open the <em>Dude.drmdl</em> file
                    in a text editor and change the &lt;Model&gt; tag:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAHACAAA_tab1" class="codeSnippetContainerTabSingle">Dude.drmdl</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAHACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">…
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Model</span> <span class="highlight-xml-attribute-name">File</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Dude.fbx"</span>
       <span class="highlight-xml-attribute-name">GenerateTangentFrames</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span>
       <span class="highlight-xml-attribute-name">PremultiplyVertexColors</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span>
       <span class="highlight-xml-attribute-name">RotationX</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">RotationY</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">RotationZ</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span>
       <span class="highlight-xml-attribute-name">Scale</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0.02"</span>
       <span class="highlight-xml-attribute-name">SwapWindingOrder</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"False"</span>
       <span class="highlight-xml-attribute-name">AabbMinimum</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"-1,-0.2,-1"</span>
       <span class="highlight-xml-attribute-name">AabbMaximum</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1,2,1"</span><span class="highlight-xml-bracket">&gt;</span>
…</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHACAAA");</script><p>
                    We set the <strong>Scale</strong> to 0.02. Also set
                    <strong>GenerateTangentFrames</strong> to true – we do not need this right
                    now, but in the future we will when we start to use normal mapping and advanced graphics.
                </p><p>
                    We also define the axis aligned bounding box (AABB) of the model using
                    <strong>AabbMinimum</strong> and <strong>AabbMaximum</strong>.
                    Normally, the bounding box is computed automatically for models. However, the bounding
                    box is always computed for the rest pose (unanimated pose) of the model. When the
                    model is animated some limbs can be moved outside the this box. Therefore, we have
                    to manually set a bigger box manually, which is large enough to contain all animated
                    poses of the model.
                </p><p>
                    Next, open all <em>*.drmat</em> files in a text editor and change the
                    effect of the default render pass from <strong>BasicEffect</strong> to
                    <strong>SkinnedEffect</strong>.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADACAAA_tab1" class="codeSnippetContainerTabSingle">*.drmat</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">…
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Pass</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Default"</span> <span class="highlight-xml-attribute-name">Effect</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"SkinnedEffect"</span> <span class="highlight-xml-attribute-name">Profile</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Any"</span><span class="highlight-xml-bracket">&gt;</span>
…</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADACAAA");</script><p>
                    The XNA <strong>BasicEffect</strong> cannot render animated models (a.k.a.
                    <span class="term">skinned meshes</span>). The XNA <strong>SkinnedEffect</strong> can.
                </p><p>
                    Make these changes and run the game again. The Dude should be walking:
                </p><div class="mediaNear"><img alt="Tutorial-01-17" src="../media/Tutorial-01-17.jpg" /></div></div><div class="collapsibleAreaRegion" id="Next"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Next</span></div><div id="ID4RBSection" class="collapsibleSection"><p><a href="a1c6f3cc-8a48-4c68-9401-421d36f67eba.htm">Step 10: More debug rendering</a></p></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>