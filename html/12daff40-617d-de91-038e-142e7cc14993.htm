<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IAnimatableProperty(T) Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IAnimatableProperty%3CT%3E interface" /><meta name="System.Keywords" content="DigitalRune.Animation.IAnimatableProperty%3CT%3E interface" /><meta name="System.Keywords" content="IAnimatableProperty%3CT%3E interface, about IAnimatableProperty%3CT%3E interface" /><meta name="System.Keywords" content="IAnimatableProperty(Of T) interface" /><meta name="System.Keywords" content="DigitalRune.Animation.IAnimatableProperty(Of T) interface" /><meta name="System.Keywords" content="IAnimatableProperty(Of T) interface, about IAnimatableProperty(Of T) interface" /><meta name="Microsoft.Help.F1" content="DigitalRune.Animation.IAnimatableProperty`1" /><meta name="Microsoft.Help.Id" content="T:DigitalRune.Animation.IAnimatableProperty`1" /><meta name="Description" content="Represents a property of a certain type that can be animated." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="DigitalRune.Animation" /><meta name="file" content="12daff40-617d-de91-038e-142e7cc14993" /><meta name="guid" content="12daff40-617d-de91-038e-142e7cc14993" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Class Library Reference" tocid="d75eb659-6335-53f6-af7a-81814a21ab7f">Class Library Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="b6234f15-43a3-0680-39ca-9526117843b5.htm" title="DigitalRune.Animation" tocid="b6234f15-43a3-0680-39ca-9526117843b5">DigitalRune.Animation</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="12daff40-617d-de91-038e-142e7cc14993.htm" title="IAnimatableProperty(T) Interface" tocid="12daff40-617d-de91-038e-142e7cc14993">IAnimatableProperty(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="89f893bf-c973-6950-ddd8-b2046debbd04.htm" title="IAnimatableProperty(T) Properties" tocid="89f893bf-c973-6950-ddd8-b2046debbd04">IAnimatableProperty(T) Properties</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">IAnimatableProperty<span id="LSTE6209C25_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LSTE6209C25_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Interface</td></tr></table><span class="introStyle"></span><div class="summary">
            Represents a property of a certain type that can be animated.
            </div><p> </p><strong>Namespace:</strong> <a href="b6234f15-43a3-0680-39ca-9526117843b5.htm">DigitalRune.Animation</a><br /><strong>Assembly:</strong> DigitalRune (in DigitalRune.dll) Version: 1.20.0.0 (1.20.1.14552)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IAnimatableProperty</span>&lt;T&gt; : <span class="identifier">IAnimatableProperty</span>
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IAnimatableProperty</span>(<span class="keyword">Of</span> T)
	<span class="keyword">Inherits</span> <span class="identifier">IAnimatableProperty</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IAnimatableProperty</span> : <span class="identifier">IAnimatableProperty</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">IAnimatableProperty</span>&lt;'T&gt; =  
    <span class="keyword">interface</span>
        <span class="keyword">interface</span> <span class="identifier">IAnimatableProperty</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T</span></dt><dd>The type of the property.</dd></dl></div><p>The <span class="selflink">IAnimatableProperty<span id="LSTE6209C25_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6209C25_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="4f1074e6-dfba-ffa7-7da8-c07c5f80cfc4.htm">AnimationValue</a></td><td><div class="summary">
            Gets or sets the animation value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a6978e2f-1317-7665-310c-5e0b70d2323b.htm">BaseValue</a></td><td><div class="summary">
            Gets the base value.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fb0fc15e-4b3a-3fb4-6db8-4cbb977b7248.htm">HasBaseValue</a></td><td><div class="summary">
            Gets a value indicating whether this property has a base value.
            </div> (Inherited from <a href="c001c0c1-ab5d-aacc-d1c4-b1ed00057ce4.htm">IAnimatableProperty</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="97bb34cf-c2c8-727c-be96-175b465d5780.htm">IsAnimated</a></td><td><div class="summary">
            Gets or sets a value indicating whether this property is animated by the animation system.
            </div> (Inherited from <a href="c001c0c1-ab5d-aacc-d1c4-b1ed00057ce4.htm">IAnimatableProperty</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
            An <a href="c001c0c1-ab5d-aacc-d1c4-b1ed00057ce4.htm">IAnimatableProperty</a> is a property of a certain type that can be animated. It
            can have two values: a <i>base value</i> and an <i>animation value</i>.
            </p><p><strong>Base Value:</strong> The base value is the value of the property that is valid when 
            no animations are active. The base value is optional - not all properties that implement
            <span class="selflink">IAnimatableProperty<span id="LSTE6209C25_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6209C25_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> need to have a base value. The properties 
            <a href="fb0fc15e-4b3a-3fb4-6db8-4cbb977b7248.htm">HasBaseValue</a> and <a href="13c723a3-fcde-ba52-ace8-80f02dc0cc5b.htm">BaseValue</a> need to be set by the object that
            implements the interface. The animation system reads the base value but does not change it.
            The base value is used by certain types of animations: For example, additive animations will
            add the result of the animations to the base value value. Another example are 
            "From-To-Animations": If only the "To" value is defined then the animation will animate from
            the base value of the property to the "To" value defined in the animation.
            </p><p><strong>Animation Value:</strong> The animation value of the property is determined by the 
            animations that are controlling the property. The properties <a href="97bb34cf-c2c8-727c-be96-175b465d5780.htm">IsAnimated</a> and 
            <a href="06a91700-a0e6-1c5a-c2c1-c4f8a2dc755c.htm">AnimationValue</a> are set by the animations system and should be treated as
            read-only. <a href="97bb34cf-c2c8-727c-be96-175b465d5780.htm">IsAnimated</a> is <span class="keyword"><span id="LSTE6209C25_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_6?vb=True|nu=true");</script></span> when an animation is active; 
            <span class="keyword"><span id="LSTE6209C25_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_7?vb=False|nu=false");</script></span> indicates that no animations are active. In this case the base value,
            if available, should be treated as the effective value of the property.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection">
            The following examples shows how an <span class="selflink">IAnimatableProperty<span id="LSTE6209C25_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6209C25_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6209C25_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> could be implemented.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> AnimatableProperty&lt;T&gt; : IAnimatableProperty&lt;T&gt;
{
  <span class="highlight-keyword">private</span> T _baseValue;
  <span class="highlight-keyword">private</span> T _animationValue;
  <span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span> _isAnimated;

  <span class="highlight-preprocessor">#region</span> ----- IAnimatableProperty -----
  <span class="highlight-keyword">bool</span> IAnimatableProperty.HasBaseValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>; }
  }

  <span class="highlight-keyword">object</span> IAnimatableProperty.BaseValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _baseValue; }
  }

  <span class="highlight-keyword">bool</span> IAnimatableProperty.IsAnimated
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _isAnimated; }
    <span class="highlight-keyword">set</span> { _isAnimated = <span class="highlight-keyword">value</span>; }
  }

  <span class="highlight-keyword">object</span> IAnimatableProperty.AnimationValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _animationValue; }
  }
  <span class="highlight-preprocessor">#endregion</span>

  <span class="highlight-preprocessor">#region</span> ----- IAnimatableProperty&lt;T&gt; -----
  T IAnimatableProperty&lt;T&gt;.BaseValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _baseValue; }
  }

  T IAnimatableProperty&lt;T&gt;.AnimationValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _animationValue; }
    <span class="highlight-keyword">set</span> { _animationValue = <span class="highlight-keyword">value</span>; }
  }
  <span class="highlight-preprocessor">#endregion</span>

  <span class="highlight-keyword">public</span> T Value
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _isAnimated ? _animationValue : _baseValue; }
    <span class="highlight-keyword">set</span> { _baseValue = <span class="highlight-keyword">value</span>; }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABA");</script><p>
            Here is another example showing how a wrapper for existing properties could look like.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DelegateAnimatableProperty&lt;T&gt; : IAnimatableProperty&lt;T&gt;
{
  <span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span> _isAnimated;
  <span class="highlight-keyword">private</span> Func&lt;T&gt; _getter;
  <span class="highlight-keyword">private</span> Action&lt;T&gt; _setter;

  <span class="highlight-preprocessor">#region</span> ----- IAnimatableProperty -----

  <span class="highlight-keyword">bool</span> IAnimatableProperty.HasBaseValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>; }
  }

  <span class="highlight-keyword">object</span> IAnimatableProperty.BaseValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException(); }
  }

  <span class="highlight-keyword">bool</span> IAnimatableProperty.IsAnimated
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _isAnimated; }
    <span class="highlight-keyword">set</span> { _isAnimated = <span class="highlight-keyword">value</span>; }
  }

  <span class="highlight-keyword">object</span> IAnimatableProperty.AnimationValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> (<span class="highlight-keyword">object</span>)_getter(); }
  }
  <span class="highlight-preprocessor">#endregion</span>

  <span class="highlight-preprocessor">#region</span> ----- IAnimatableProperty&lt;T&gt; -----

  T IAnimatableProperty&lt;T&gt;.BaseValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException(); }
  }

  T IAnimatableProperty&lt;T&gt;.AnimationValue
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _getter(); }
    <span class="highlight-keyword">set</span> { _setter(<span class="highlight-keyword">value</span>); }
  }
  <span class="highlight-preprocessor">#endregion</span>

  <span class="highlight-keyword">public</span> DelegateAnimatableProperty(Func&lt;T&gt; getter, Action&lt;T&gt; setter)
  {
    <span class="highlight-keyword">if</span> (getter == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentNullException(<span class="highlight-literal">"getter"</span>);
    <span class="highlight-keyword">if</span> (setter == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentNullException(<span class="highlight-literal">"setter"</span>);

    _getter = getter;
    _setter = setter;
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="b6234f15-43a3-0680-39ca-9526117843b5.htm">DigitalRune.Animation Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>