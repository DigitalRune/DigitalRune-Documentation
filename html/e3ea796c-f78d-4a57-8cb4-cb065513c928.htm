<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How To: Use Vectors, Matrices and Quaternions</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="e3ea796c-f78d-4a57-8cb4-cb065513c928" /><meta name="Description" content="This section shows simple examples of how to calculate with vectors and matrices." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2ac58586-0d4f-4625-bf4c-fc32591a5304.htm" title="DigitalRune Mathematics" tocid="2ac58586-0d4f-4625-bf4c-fc32591a5304">DigitalRune Mathematics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1f324567-e502-496a-a1ca-bdc232611133.htm" title="Articles" tocid="1f324567-e502-496a-a1ca-bdc232611133">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="dcccdb1a-a354-46e0-a792-6d866b751a77.htm" title="How To: Add DigitalRune Mathematics to a Project" tocid="dcccdb1a-a354-46e0-a792-6d866b751a77">How To: Add DigitalRune Mathematics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="492d3089-3c0f-43a5-b068-417fcd8f91e3.htm" title="How To: Compare Floating-Point Numbers" tocid="492d3089-3c0f-43a5-b068-417fcd8f91e3">How To: Compare Floating-Point Numbers</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="e3ea796c-f78d-4a57-8cb4-cb065513c928.htm" title="How To: Use Vectors, Matrices and Quaternions" tocid="e3ea796c-f78d-4a57-8cb4-cb065513c928">How To: Use Vectors, Matrices and Quaternions</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f2ee69ec-0e54-4acd-a9e7-bd645644a05d.htm" title="How To: Solve a Non-Linear Equation" tocid="f2ee69ec-0e54-4acd-a9e7-bd645644a05d">How To: Solve a Non-Linear Equation</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="101938c1-f02f-4224-b64e-a95774668df8.htm" title="How To: Move Objects on a 3D Path" tocid="101938c1-f02f-4224-b64e-a95774668df8">How To: Move Objects on a 3D Path</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="81cd4f27-5ce5-4439-9a6c-121f2942f175.htm" title="Exponential Smoothing Filter" tocid="81cd4f27-5ce5-4439-9a6c-121f2942f175">Exponential Smoothing Filter</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="69aba1e3-d818-4c9d-9696-a5978ea88f84.htm" title="Scattered Interpolation" tocid="69aba1e3-d818-4c9d-9696-a5978ea88f84">Scattered Interpolation</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">How To: Use Vectors, Matrices and Quaternions</td></tr></table><span class="introStyle"></span><div class="introduction"><p>This section shows simple examples of how to calculate with vectors and matrices.</p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Namespaces">Add DigitalRune.Mathematics namespaces</a></li><li class="outlineSectionEntry"><a href="#Quaternion">Rotate a vector using a quaternion</a></li><li class="outlineSectionEntry"><a href="#Matrix">Rotate a vector using a matrix</a></li><li class="outlineSectionEntry"><a href="#Comparison">Comparing vectors</a></li></ul></div><div class="collapsibleAreaRegion" id="Namespaces"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Add DigitalRune.Mathematics namespaces</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    Vector and matrix types belong to the namespace
                    <a href="1fde7a2c-857e-e92a-d7a7-360ad5e26ce9.htm">DigitalRune.Mathematics.Algebra</a>.
                    The following examples will also use the type
                    <a href="f7b93f3c-ce4d-cdbf-36bd-38870f3ee6da.htm">MathHelper</a>
                    from the namespace
                    <a href="e0488d68-75ff-be52-f682-d9d366a123e7.htm">DigitalRune.Mathematics</a>.
                    These namespace must be imported at the beginning of the source code file:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> DigitalRune.Mathematics;
<span class="highlight-keyword">using</span> DigitalRune.Mathematics.Algebra;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEAAA");</script></div><div class="collapsibleAreaRegion" id="Quaternion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Rotate a vector using a quaternion</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    Next, we show how to rotate a vector around a given axis.
                </p><p>
                    We define a vector <span class="code">v</span> and a rotation axis:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAFADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Vector3F v = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span>);
Vector3F rotationAxis = Vector3F.UnitZ;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFADAAA");</script><p><span class="code">v</span> is initialized as a vector <span class="math">(1, 2, 3)</span>.
                    The vector <span class="code">rotationAxis</span> is equal to the
                    z unit vector <span class="math">(0, 0, 1)</span>.
                </p><p>
                    Now, we can define a quaternion that rotates the vectors <span class="math">30°</span>
                    around the rotation axis.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">float</span> rotationAngle = MathHelper.ToRadians(<span class="highlight-number">30</span>);
QuaternionF rotation = QuaternionF.CreateRotation(rotationAxis, rotationAngle);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACADAAA");</script><p>
                    Finally, we use the quaternion to rotate the vector <span class="code">v</span>:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Vector3F vRotated = rotation.Rotate(v);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="Matrix"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Rotate a vector using a matrix</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    The same vector rotation as above can be achieved with a rotation matrix,
                    like this:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Vector3F v = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span>);
Vector3F rotationAxis = Vector3F.UnitZ;

<span class="highlight-keyword">float</span> rotationAngle = MathHelper.ToRadians(<span class="highlight-number">50</span>);
Matrix33F rotation = Matrix33F.CreateRotation(rotationAxis, rotationAngle);

Vector3F vRotated = rotation * v;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="Comparison"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Comparing vectors</span></div><div id="ID4RBSection" class="collapsibleSection"><p>It is often necessary to compare vectors. In this example we create two vectors:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAJABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAJABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAJABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAJABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Vector3F v0 = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1000</span>, <span class="highlight-number">2000</span>, <span class="highlight-number">3000</span>);

QuaternionF rotation = QuaternionF.CreateRotationX(MathHelper.ToRadians(<span class="highlight-number">360</span>));
Vector3F v1 = rotation.Rotate(v0);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAJABAAA");</script><p>
                    The vector <span class="code">v1</span> is created by rotating <span class="code">v0</span>
                    by 360° around the x-axis, which should result in the same vector. We can use
                    the equality operator to compare the vectors:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAHABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAHABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">if</span> (v0 == v1)
  Console.WriteLine(<span class="highlight-literal">"Vectors are equal."</span>);
<span class="highlight-keyword">else</span>
  Console.WriteLine(<span class="highlight-literal">"Vectors are not equal."</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHABAAA");</script><p>
                    This piece of code will output the message
                </p>Vectors are not equal.<p>
                    The vectors
                    are considered not equal because the numerical errors in the rotation caused
                    <span class="code">v1</span> to be <span class="code">(1000, 1999.99951, 3000.00049)</span>
                    instead of <span class="code">(1000, 2000, 3000)</span>.
                    Numerical errors are inevitable. Therefore, we can use following code
                    to check for equality with a numerical tolerance:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">if</span> (Vector3F.AreNumericallyEqual(v0, v1))
  Console.WriteLine(<span class="highlight-literal">"Vectors are equal."</span>);
<span class="highlight-keyword">else</span>
  Console.WriteLine(<span class="highlight-literal">"Vectors are not equal."</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABAAA");</script><p>
                    This will output the message:
                </p>Vectors are equal.<p>
                    Other vector, matrix and quaternion types have similar methods for robust
                    value comparison.
                </p></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>