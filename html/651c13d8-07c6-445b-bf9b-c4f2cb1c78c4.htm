<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IInputService Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IInputService interface, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:DigitalRune.Game.Input.IInputService" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="DigitalRune.Game.Input" /><meta name="file" content="651c13d8-07c6-445b-bf9b-c4f2cb1c78c4" /><meta name="guid" content="651c13d8-07c6-445b-bf9b-c4f2cb1c78c4" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Class Library Reference" tocid="d75eb659-6335-53f6-af7a-81814a21ab7f">Class Library Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="02bd96b5-c091-2df3-73d5-fbb8056b8e03.htm" title="DigitalRune.Game.Input" tocid="02bd96b5-c091-2df3-73d5-fbb8056b8e03">DigitalRune.Game.Input</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ccc38e5b-8b21-b109-140c-2ce6c275070f.htm" title="IInputService Interface" tocid="ccc38e5b-8b21-b109-140c-2ce6c275070f">IInputService Interface</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="651c13d8-07c6-445b-bf9b-c4f2cb1c78c4.htm" title="IInputService Methods" tocid="651c13d8-07c6-445b-bf9b-c4f2cb1c78c4">IInputService Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="baa43b8b-780f-aca9-0521-9f68cc81f9a5.htm" title="GetGamePadState Method " tocid="baa43b8b-780f-aca9-0521-9f68cc81f9a5">GetGamePadState Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="81b26166-9ddc-b867-ea9d-914826a0bf58.htm" title="GetLogicalPlayer Method " tocid="81b26166-9ddc-b867-ea9d-914826a0bf58">GetLogicalPlayer Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5ff3f92a-acfb-9319-34b9-3fdfe4e56bce.htm" title="GetPreviousGamePadState Method " tocid="5ff3f92a-acfb-9319-34b9-3fdfe4e56bce">GetPreviousGamePadState Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="85f62bea-9b96-5d35-0617-fdecba4d99cf.htm" title="IsDoubleClick Method " tocid="85f62bea-9b96-5d35-0617-fdecba4d99cf">IsDoubleClick Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a251a29e-b4fa-1158-2ca2-4257b5c9ac6f.htm" title="IsDown Method " tocid="a251a29e-b4fa-1158-2ca2-4257b5c9ac6f">IsDown Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e91c9f51-9c39-6b53-7e4f-c28f66e2d1f9.htm" title="IsGamePadHandled Method " tocid="e91c9f51-9c39-6b53-7e4f-c28f66e2d1f9">IsGamePadHandled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7d4a1ac-87f9-144e-261f-520c1629f514.htm" title="IsPressed Method " tocid="a7d4a1ac-87f9-144e-261f-520c1629f514">IsPressed Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ad218854-bbc6-71da-3bdf-7677f7f09e1f.htm" title="IsReleased Method " tocid="ad218854-bbc6-71da-3bdf-7677f7f09e1f">IsReleased Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f3c56ce1-e7b8-bfbd-8a8b-db98ccfb8f90.htm" title="IsUp Method " tocid="f3c56ce1-e7b8-bfbd-8a8b-db98ccfb8f90">IsUp Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="488c6cdb-8a07-183a-3b42-787f7b614e6e.htm" title="SetAllHandled Method " tocid="488c6cdb-8a07-183a-3b42-787f7b614e6e">SetAllHandled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6deefd11-e8d2-f559-8b04-29e2ad8692e6.htm" title="SetGamePadHandled Method " tocid="6deefd11-e8d2-f559-8b04-29e2ad8692e6">SetGamePadHandled Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="aaef81df-be8b-aade-a464-ec7b8205b1a5.htm" title="SetLogicalPlayer Method " tocid="aaef81df-be8b-aade-a464-ec7b8205b1a5">SetLogicalPlayer Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">IInputService Methods</td></tr></table><span class="introStyle"></span><p>The <a href="ccc38e5b-8b21-b109-140c-2ce6c275070f.htm">IInputService</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="81d7da0a-817b-2311-8b2f-c1d1ced2336e.htm">GetGamePadState(PlayerIndex)</a></td><td><div class="summary">
            Gets the gamepad state of the given game controller. (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="12229f8f-328c-ec00-78d4-b075019e9aa0.htm">GetGamePadState(LogicalPlayerIndex)</a></td><td><div class="summary">
            Gets the gamepad state for the given player.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="81b26166-9ddc-b867-ea9d-914826a0bf58.htm">GetLogicalPlayer</a></td><td><div class="summary">
            Gets the game controller assigned to the specified player. (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2b4a9a20-085c-df16-1daf-2e585a519314.htm">GetPreviousGamePadState(PlayerIndex)</a></td><td><div class="summary">
            Gets the gamepad state of the last frame of the given game controller. 
            (Only available in XNA Windows Phone builds.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="16381f44-054b-49b2-52f2-e933c5f44f6c.htm">GetPreviousGamePadState(LogicalPlayerIndex)</a></td><td><div class="summary">
            Gets the gamepad state of the last frame for the given player. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4a21a3ba-c26d-3ab7-cdc2-e19c34e1f085.htm">IsDoubleClick(Keys)</a></td><td><div class="summary">
            Determines whether the specified key was double-clicked.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="921ccc01-50b9-ae1c-3762-691a66c29af1.htm">IsDoubleClick(MouseButtons)</a></td><td><div class="summary">
            Determines whether the specified button has been double-clicked.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d31ac2d0-bf9f-b522-a169-27052a627657.htm">IsDoubleClick(Buttons, LogicalPlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button has been double-clicked by the given player.
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4679f2d5-7f12-b200-b215-3f4de58fceec.htm">IsDoubleClick(Buttons, PlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button has been double-clicked on the given game 
            controller. (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="42d40324-fe00-5b1c-a886-260277494d95.htm">IsDown(Keys)</a></td><td><div class="summary">
            Determines whether the specified key is down.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b03a208e-65c4-954c-6193-02dee5cae404.htm">IsDown(MouseButtons)</a></td><td><div class="summary">
            Determines whether the specified button is down.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="61b7f23a-a9b7-9222-ee7b-c2cb82c9b254.htm">IsDown(Buttons, LogicalPlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button is down for the given player. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="12bffadf-ddf1-7989-819c-3e1b66ceaf02.htm">IsDown(Buttons, PlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button is down on the given game controller. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="23d2acde-da56-6fe3-535c-3ca5a65439ac.htm">IsGamePadHandled(PlayerIndex)</a></td><td><div class="summary">
            Gets a value indicating whether the input of a given game controller has already been 
            handled. (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1a7aaefe-b3d9-2177-ce37-434a0aac329c.htm">IsGamePadHandled(LogicalPlayerIndex)</a></td><td><div class="summary">
            Gets a value indicating whether gamepad input of a given player has already been handled.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d57858da-0a52-ff04-bb9a-c3f1b3aeb187.htm">IsPressed(Keys, Boolean)</a></td><td><div class="summary">
            Determines whether the specified key was previously up and has been pressed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1623dcaa-1428-d5a4-03e8-fe52895d47c0.htm">IsPressed(MouseButtons, Boolean)</a></td><td><div class="summary">
            Determines whether the specified button was previously up and has been pressed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c9124155-a882-aee8-28f5-f41e95cb0cec.htm">IsPressed(Buttons, Boolean, LogicalPlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button has been pressed by the given player. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="25277d59-2c02-1ad6-b93e-667fe5c329c1.htm">IsPressed(Buttons, Boolean, PlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button has been pressed on the given game controller. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a2915c8d-fc4f-27ce-c0ec-dd1f657c72c7.htm">IsReleased(Keys)</a></td><td><div class="summary">
            Determines whether the specified key was previously down and has been released.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="63295080-af28-63bf-67e8-e927e7b4bfb7.htm">IsReleased(MouseButtons)</a></td><td><div class="summary">
            Determines whether the specified button was previously down and has been released.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b9896634-a737-7503-0e91-ec8c80554dc8.htm">IsReleased(Buttons, LogicalPlayerIndex)</a></td><td><div class="summary"> 
            Determines whether the specified button has been released by the given player.
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="75e8e70d-2b03-9c31-8e0f-526129e431d6.htm">IsReleased(Buttons, PlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button has been released on the given game controller.
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a8306fed-e315-cdf8-4831-2b258854e899.htm">IsUp(Keys)</a></td><td><div class="summary">
            Determines whether the specified key is up.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b082b997-7969-bfdc-13c1-96319ce96273.htm">IsUp(MouseButtons)</a></td><td><div class="summary">
            Determines whether the specified button is up.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9e67105e-71e0-3aa3-c533-3f195603e46a.htm">IsUp(Buttons, LogicalPlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button is up for the given player. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ede4d260-6bcb-4e8b-d54b-f8c9587d1b98.htm">IsUp(Buttons, PlayerIndex)</a></td><td><div class="summary">
            Determines whether the specified button is up on the given game controller. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="488c6cdb-8a07-183a-3b42-787f7b614e6e.htm">SetAllHandled</a></td><td><div class="summary">
            Sets all "IsHandled" flags to the given value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f2db95f0-6597-ef5c-4a66-970c94262887.htm">SetGamePadHandled(PlayerIndex, Boolean)</a></td><td><div class="summary">
            Sets the <strong>IsGamePadHandled</strong> flags of a given game controller. 
            (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8a7a2ee8-cc4c-f8aa-4d99-512d8a240e1f.htm">SetGamePadHandled(LogicalPlayerIndex, Boolean)</a></td><td><div class="summary">
            Sets the <strong>IsGamePadHandled</strong> flags for the given player. (Not available in Silverlight.)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="aaef81df-be8b-aade-a464-ec7b8205b1a5.htm">SetLogicalPlayer</a></td><td><div class="summary">
            Assigns a game controller to a player. (Not available in Silverlight.)
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="ccc38e5b-8b21-b109-140c-2ce6c275070f.htm">IInputService Interface</a></div><div class="seeAlsoStyle"><a href="02bd96b5-c091-2df3-73d5-fbb8056b8e03.htm">DigitalRune.Game.Input Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>