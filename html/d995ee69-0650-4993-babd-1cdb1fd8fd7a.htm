<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Pose (Position and Orientation)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="d995ee69-0650-4993-babd-1cdb1fd8fd7a" /><meta name="Description" content="Positioning objects in 3D space is essential in games. This section introduces a type called T:DigitalRune.Geometry.Pose that describes the position and orientation of an object." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="335dc86a-c68d-4d7b-8641-81dd80de5e76.htm" title="DigitalRune Geometry" tocid="335dc86a-c68d-4d7b-8641-81dd80de5e76">DigitalRune Geometry</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1510119e-5c7c-4ebc-851d-684976c1fb29.htm" title="Overview" tocid="1510119e-5c7c-4ebc-851d-684976c1fb29">Overview</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7945ac67-dffc-4197-9fbf-58a9b68c0ea1.htm" title="Definitions and Conventions" tocid="7945ac67-dffc-4197-9fbf-58a9b68c0ea1">Definitions and Conventions</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="d995ee69-0650-4993-babd-1cdb1fd8fd7a.htm" title="Pose (Position and Orientation)" tocid="d995ee69-0650-4993-babd-1cdb1fd8fd7a">Pose (Position and Orientation)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ed50b52b-a4d4-4192-bc72-0061085466d5.htm" title="Geometric Objects and Shapes" tocid="ed50b52b-a4d4-4192-bc72-0061085466d5">Geometric Objects and Shapes</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="629ec6f3-8533-4ef9-94d0-220ef375387c.htm" title="Collision Detection" tocid="629ec6f3-8533-4ef9-94d0-220ef375387c">Collision Detection</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9df3b4b6-1218-43b8-be9e-319d97a5b9a0.htm" title="Multithreading" tocid="9df3b4b6-1218-43b8-be9e-319d97a5b9a0">Multithreading</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4a3324b2-fc11-41bf-bb16-1e8ab644f1c4.htm" title="Resource Pooling" tocid="4a3324b2-fc11-41bf-bb16-1e8ab644f1c4">Resource Pooling</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7af0a749-83f9-437b-88fc-56f70c0c6dd2.htm" title="XNA Framework Support" tocid="7af0a749-83f9-437b-88fc-56f70c0c6dd2">XNA Framework Support</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="76e11a96-42a4-495c-b8f8-6164a67d05d5.htm" title="Articles" tocid="76e11a96-42a4-495c-b8f8-6164a67d05d5">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e32cab3b-cc7c-42ee-8ec9-23dd4467edd0.htm" title="FAQ" tocid="e32cab3b-cc7c-42ee-8ec9-23dd4467edd0">FAQ</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3cbb67a9-77ff-44cd-be2a-618e0a2d89df.htm" title="Class Diagrams" tocid="3cbb67a9-77ff-44cd-be2a-618e0a2d89df">Class Diagrams</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Pose (Position and Orientation)</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                Positioning objects in 3D space is essential in games. This section introduces
                a type called <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>
                that describes the position and orientation of an object.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Pose">What is a Pose?</a></li><li class="outlineSectionEntry"><a href="#Reasons">Reasons for using Pose</a></li><li class="outlineSectionEntry"><a href="#Examples">How to use a Pose?</a></li><li class="outlineSectionEntry"><a href="#Pitfalls">WARNING: Common pitfall when working with value types such as Vector3, Matrix, Pose</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="Pose"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />What is a Pose?</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
                    DigitalRune Geometry provides a value type called
                    <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>.
                    A pose describes a position (see <a href="5d195b15-fe13-d45b-62f4-fb0e8cb59b7f.htm">Position</a>)
                    and an orientation (see <a href="db101aa7-5042-8977-b987-fb05cfff4c5e.htm">Orientation</a>)
                    in 3D space. It is very similar to a transformation matrix: Both are used
                    to describe a transformation in space. When using transformation matrices
                    we usually use the terms "rotation" and "translation". When using a
                    pose we use the terms "orientation" and "position". But that’s just a subtle
                    difference – it pretty much means the same.
                </p><p>
                    A pose can be used to describe the position and orientation of any object
                    in a 3D space: shapes, rigid bodies, characters, cameras, etc.
                </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
                        One might ask, why is this type <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>
                        in DigitalRune Geometry and not in DigitalRune Mathematics? The reason is
                        that the types in DigitalRune Mathematics have no particular meaning. A
                        <a href="c05db5d2-8063-9f11-af3c-e2389f8c0995.htm">Vector3F</a>
                        might be a position, a direction, or something completely different. Similarly, a
                        <a href="f50d7e60-d2a6-cf17-6e14-41dbb1f85058.htm">Matrix44F</a>
                        can be used for all sorts of things. Whereas, in DigitalRune Geometry deals
                        with geometric objects in 3D space. Here, vectors and matrices have a particular
                        meaning - hence we have wrapped them and created a type called
                        <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>.
                    </p></td></tr></table></div><p>
                    Working with matrices is notoriously difficult and error-prone: Do I
                    have to multiply the matrices from the right or from the left? Do I
                    need to multiply with the matrix or the inverse matrix? Is the translation
                    stored the last column or row in 4x4 matrix? Etc.
                </p><p>
                    Pose was designed to make common tasks in game development easier - and
                    to avoid headaches while coding.
                </p></div><div class="collapsibleAreaRegion" id="Reasons"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Reasons for using Pose</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    The type <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>
                    is highly optimized for its particular purpose:
                </p><ul><li>
                        Pose is a value type (struct), so in general there is no need to
                        worry about memory allocations on the heap ("garbage").
                    </li><li>
                        A single pose requires 48 bytes - that's less memory than a matrix in XNA.
                    </li><li>
                        Concatenating (multiplying) two poses is faster than concatenating two
                        transformation matrices.
                    </li><li>
                        Transforming a vector using a pose is faster than multiplying a vector with a 4x4 matrix.
                    </li><li>
                        Inverting a Pose is much faster than inverting a 4x4 matrix.
                    </li></ul></div><div class="collapsibleAreaRegion" id="Examples"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />How to use a Pose?</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    Here are some examples showing how to define a pose.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAKACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAKACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAKACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAKACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create a new Pose that contains no translation and no rotation.</span>
Pose pose = Pose.Identity;

<span class="highlight-comment">// Create a Pose that defines a position of (1, 2, 3).</span>
pose = <span class="highlight-keyword">new</span> Pose(<span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span>));

<span class="highlight-comment">// Create a Pose that defines an orientation of 30° around the x-axis.</span>
pose = <span class="highlight-keyword">new</span> Pose(Matrix33F.CreateRotationX(MathHelper.ToRadians(<span class="highlight-number">30</span>)));

<span class="highlight-comment">// Or, using QuaternionF instead of Matrix33F.</span>
pose = <span class="highlight-keyword">new</span> Pose(QuaternionF.CreateRotationX(MathHelper.ToRadians(<span class="highlight-number">30</span>)));

<span class="highlight-comment">// A Pose can be manipulated directly using its fields ‘Position’ and ‘Orientation’:</span>
<span class="highlight-comment">// Let's move the object 10 units in y direction.</span>
pose.Position += <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);

<span class="highlight-comment">// Or, let's rotate the object 10° further around the z-axis.</span>
pose.Orientation = Matrix33F.CreateRotationZ(MathHelper.ToRadians(<span class="highlight-number">10</span>)) * pose.Orientation;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAKACAAA");</script><p>
                    Once a pose is defined, it can be use to transform objects.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAIACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAIACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAIACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAIACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's transform a point from local space to world space.</span>
<span class="highlight-keyword">var</span> pointLocal = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
<span class="highlight-keyword">var</span> pointWorld = pose.ToWorldPosition(pointLocal);

<span class="highlight-comment">// Let's transform a direction from local space to world space.</span>
<span class="highlight-keyword">var</span> directionLocal = Vector3F.Forward;
<span class="highlight-keyword">var</span> directionWorld = pose.ToWorldDirection(directionLocal);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAIACAAA");</script><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
                        Note the postfixes "local" and "world". That’s a convention we use
                        internally to describe the space a variable is defined in.
                    </p></td></tr></table></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAGACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAGACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAGACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAGACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Of course, we can also transform objects from world space to local space.</span>
pointLocal = pose.ToLocalPosition(pointWorld);
directionLocal = pose.ToLocalDirection(directionWorld);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAGACAAA");</script><p>
                    A pose can also be used similarly to a 4x4 transformation matrix.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAEACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAEACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAEACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// We can multiply a Vector4F directly with a Pose instead of a Matrix44F.</span>
<span class="highlight-keyword">var</span> pLocal = <span class="highlight-keyword">new</span> Vector4F(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>); <span class="highlight-comment">// The position (1, 0, 0) in homogeneous coordinates.</span>
<span class="highlight-keyword">var</span> pWorld = pose * pLocal;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAEACAAA");</script><p>
                    Different poses can be combined just as one would concatenate transformation
                    matrices. It is also possible to compute the inverse transformation of a pose:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's concatenate two Poses by multiplying them - just as we would to with matrices.</span>
<span class="highlight-keyword">var</span> pose3 = pose2 * pose1;

<span class="highlight-comment">// Just like with matrices we can also compute the inverse of a Pose.</span>
<span class="highlight-keyword">var</span> inversePose = pose.Inverse;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EACACAAA");</script><p>
                    A pose also provides implicit cast operators to convert a
                    <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>
                    to a <a href="f50d7e60-d2a6-cf17-6e14-41dbb1f85058.htm">Matrix44F</a>
                    or an XNA <strong>Matrix</strong>.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's convert a Pose to a Matrix.</span>
Matrix worldMatrix = pose;

<span class="highlight-comment">// That's useful, for example, when we have defined the pose of a Model in XNA.</span>
<span class="highlight-comment">// To render the Model we have to assign the world transformation matrix of the</span>
<span class="highlight-comment">// Model to the Effect used for rendering.</span>
basicEffect.World = pose;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="Pitfalls"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />WARNING: Common pitfall when working with value types such as Vector3, Matrix, Pose</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
                    There are two common pitfalls when working with value types such as
                    <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>.
                </p><h4 class="subHeading" id="DefaultConstructor">Beware of the default constructor</h4><div class="subsection"><p>
                            The default constructor of <a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">Pose</a>
                            sets all fields to 0 - it does not create a valid transformation! Instead, you should set the pose to
                            <a href="4f209124-f96c-7522-fc05-910a26a8dbad.htm">Identity</a>.
                        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAAABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAAABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAAABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAAABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Pose p1 = <span class="highlight-keyword">new</span> Pose();    <span class="highlight-comment">// WARNING: Not a valid transformation!</span>
Pose p2 = Pose.Identity; <span class="highlight-comment">// Valid transformation!</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAAABABAAA");</script></div><h4 class="subHeading" id="Properties">Watch out for properties</h4><div class="subsection"><p>
                            Let's assume you have an object with a property <strong>Pose</strong>:
                        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAEAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAEAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAEAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAEAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> MyObject
{
  <span class="highlight-keyword">public</span> Pose Pose { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

  <span class="highlight-comment">// ...</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAEAAABAAA");</script><p>
                            Now, if you want to update the position you can't just assign a new vector.
                        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EACAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EACAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EACAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EACAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Warning: This should give squiggly lines in Visual Studio.</span>
myObject.Pose.Position = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EACAAABAAA");</script><p>
                            Above line is not working as expected because the getter of the property
                            actually returns a copy of the pose. You always have to assign the new pose
                            as a whole:
                        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAAAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAAAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID2EAAAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAAAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Here's the right way to do it:</span>
myObject.Pose = <span class="highlight-keyword">new</span> Pose(<span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span>), myObject.Pose.Orientation);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAAAAABAAA");</script></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="7c0b7cea-0ddc-0f21-0412-731af186b1c8.htm">DigitalRune.Geometry<span id="LST12CFFC34_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12CFFC34_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Pose</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="9a927200-8841-4c76-94bc-29c5633c5d38.htm">How To: Compute World and View Matrix using Pose</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>