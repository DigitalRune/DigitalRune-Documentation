<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Parallel Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Parallel class" /><meta name="System.Keywords" content="DigitalRune.Threading.Parallel class" /><meta name="System.Keywords" content="Parallel class, about Parallel class" /><meta name="Microsoft.Help.F1" content="DigitalRune.Threading.Parallel" /><meta name="Microsoft.Help.Id" content="T:DigitalRune.Threading.Parallel" /><meta name="Description" content="Provides support for parallel execution of tasks." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="DigitalRune.Threading" /><meta name="file" content="80257661-725a-be38-7bf1-7f97e6a3b94e" /><meta name="guid" content="80257661-725a-be38-7bf1-7f97e6a3b94e" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Class Library Reference" tocid="d75eb659-6335-53f6-af7a-81814a21ab7f">Class Library Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="34755e8a-951a-369c-717a-134c9c1a337e.htm" title="DigitalRune.Threading" tocid="34755e8a-951a-369c-717a-134c9c1a337e">DigitalRune.Threading</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="80257661-725a-be38-7bf1-7f97e6a3b94e.htm" title="Parallel Class" tocid="80257661-725a-be38-7bf1-7f97e6a3b94e">Parallel Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f1b755f4-d2b0-1f27-297e-c6bd50260de4.htm" title="Parallel Methods" tocid="f1b755f4-d2b0-1f27-297e-c6bd50260de4">Parallel Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="fb4b9dc0-90dc-782c-a1d7-c985843c85b7.htm" title="Parallel Properties" tocid="fb4b9dc0-90dc-782c-a1d7-c985843c85b7">Parallel Properties</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Parallel Class</td></tr></table><span class="introStyle"></span><div class="summary">
            Provides support for parallel execution of tasks.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST87C6DFB1_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">DigitalRune.Threading<span id="LST87C6DFB1_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Parallel</span><br /></div><p> </p><strong>Namespace:</strong> <a href="34755e8a-951a-369c-717a-134c9c1a337e.htm">DigitalRune.Threading</a><br /><strong>Assembly:</strong> DigitalRune (in DigitalRune.dll) Version: 1.20.0.0 (1.20.1.14552)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Parallel</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">Parallel</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Parallel</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">Parallel</span> =  <span class="keyword">class</span> <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">Parallel</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2bf5f861-00ee-3a93-fa3d-a0ee3dae02be.htm">Do(<span id="LST87C6DFB1_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_2?cpp=array&lt;");</script>Action<span id="LST87C6DFB1_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Executes the given work items potentially in parallel with each other.
            This method will block until all work is completed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="fa38362b-5868-e5e3-5b5a-6adf6222347d.htm">Do(<span id="LST87C6DFB1_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_4?cpp=array&lt;");</script>IWork<span id="LST87C6DFB1_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Executes the given work items potentially in parallel with each other.
            This method will block until all work is completed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="74b825d8-02e7-023c-ce7b-5aedeba948e4.htm">Do(Action, Action)</a></td><td><div class="summary">
            Executes the given work items potentially in parallel with each other.
            This method will block until all work is completed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="98743ddc-887d-4699-f494-f815fee205d7.htm">Do(IWork, IWork)</a></td><td><div class="summary">
            Executes the given work items potentially in parallel with each other.
            This method will block until all work is completed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c232e7f6-cb5e-2971-8251-5d6a951fc1bf.htm">For(Int32, Int32, Action<span id="LST87C6DFB1_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST87C6DFB1_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Executes a for loop where each iteration can potentially occur in parallel with others.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8799f400-d83f-09d7-5136-b45286e4539c.htm">For(Int32, Int32, Action<span id="LST87C6DFB1_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST87C6DFB1_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Executes a for loop where each iteration can potentially occur in parallel with others. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ac9a1fc0-c71c-2c81-2bfa-38be21639ca6.htm">ForEach<span id="LST87C6DFB1_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            Executes a for-each loop where each iteration can potentially occur in parallel with others.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="64c6a670-9ad6-e88a-9487-d4a3ad7c268b.htm">RunCallbacks</a></td><td><div class="summary">
            Executes all task callbacks on a single thread.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="b24415a2-4aa2-3602-3253-10240f3161e5.htm">Start(Action)</a></td><td><div class="summary">
            Creates and starts a task to execute the given work.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="1966d1be-e24f-ca12-9176-b2428b9e26eb.htm">Start(IWork)</a></td><td><div class="summary">
            Creates and starts a task to execute the given work.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="efc4e0e3-0877-d3f0-c83a-19cc71bd9221.htm">Start(Action, WorkOptions)</a></td><td><div class="summary">
            Creates and starts a task to execute the given work.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9af831c4-a0ef-69da-015e-c8ff72b5c380.htm">Start(Action, Action)</a></td><td><div class="summary">
            Creates and starts a task to execute the given work.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="15973060-e47d-24f0-921b-37e148465b2e.htm">Start(IWork, Action)</a></td><td><div class="summary">
            Creates and starts a task to execute the given work.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9627f208-0b3e-6c14-d3fa-ce80ffaae70f.htm">Start(Action, WorkOptions, Action)</a></td><td><div class="summary">
            Creates and starts a task to execute the given work.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="19ef0e80-16a0-fc9f-d6ee-1a0b87da7f56.htm">Start<span id="LST87C6DFB1_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST87C6DFB1_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Creates and starts a task which executes the given function and stores the result for later 
            retrieval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="02069bcd-8153-f26d-0e55-90bc9522e841.htm">Start<span id="LST87C6DFB1_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST87C6DFB1_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, WorkOptions)</a></td><td><div class="summary">
            Creates an starts a task which executes the given function and stores the result for later 
            retrieval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a01ddaea-23cd-5868-7ded-ff1c1a80b7e8.htm">Start<span id="LST87C6DFB1_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST87C6DFB1_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_22?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_23?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Action)</a></td><td><div class="summary">
            Creates and starts a task which executes the given function and stores the result for later 
            retrieval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="5d82671f-a0a6-0601-c0ed-f4acfba70c48.htm">Start<span id="LST87C6DFB1_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_24?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST87C6DFB1_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, WorkOptions, Action)</a></td><td><div class="summary">
            Creates and starts a task which executes the given function and stores the result for later 
            retrieval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="64e9bac5-af82-0ca0-df15-3e4655f93d52.htm">StartBackground(Action)</a></td><td><div class="summary">
            Starts a task in a secondary worker thread. Intended for long running, blocking work such as
            I/O.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="259b6183-18bd-440d-f6ba-eac5bcf37484.htm">StartBackground(IWork)</a></td><td><div class="summary">
            Starts a task in a secondary worker thread. Intended for long running, blocking work such as
            I/O.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="500f6aa4-452c-23ab-5c4f-f490e6c01140.htm">StartBackground(Action, Action)</a></td><td><div class="summary">
            Starts a task in a secondary worker thread. Intended for long running, blocking, work
            such as I/O.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="241f0b66-2d3e-01f6-5448-1cb2c30fb2ef.htm">StartBackground(IWork, Action)</a></td><td><div class="summary">
            Starts a task in a secondary worker thread. Intended for long running, blocking work such as
            I/O.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7799d3cf-1dba-84bb-163f-a0190578e003.htm">ProcessorAffinity</a></td><td><div class="summary">
            Gets or sets the processor affinity of the worker threads.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a55e9e47-926e-716e-3453-03de0a9e0764.htm">Scheduler</a></td><td><div class="summary">
            Gets or sets the task scheduler.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
            The namespace <strong>DigitalRune.Threading</strong> and the class <span class="selflink">Parallel</span> 
            provides support for concurrency to run multiple tasks in parallel and automatically balance 
            work across all available processors. The implementation is a replacement for Microsoft's Task 
            Parallel Library (see <a href="http://msdn.microsoft.com/en-us/library/dd537609.aspx" target="_blank">
            Task Parallelism (Task Parallel Library)</a>) which is not yet supported by the .NET Compact 
            Framework. This class <span class="selflink">Parallel</span> provides a lightweight and cross-platform 
            implementation (supported on Windows, Silverlight, Windows Phone 7, and Xbox 360).
            </p><p>
            The API has similarities to Microsoft's Task Parallel Library, but it is not identical. The 
            names in the namespace <strong>DigitalRune.Threading</strong> conflict with the types of the 
            namespace <strong>System.Threading.Tasks</strong>. This is on purpose as only one solution for 
            concurrency should be used in an application. The library has been optimized for the .NET 
            Compact Framework: Only the absolute minimum of memory is allocated at runtime.
            </p><p>
            The DigitalRune libraries, such as 
            <a href="http://www.digitalrune.com/Documentation?topic=html/335dc86a-c68d-4d7b-8641-81dd80de5e76.htm" target="_blank">DigitalRune Geometry</a> 
            and 
            <a href="http://www.digitalrune.com/Documentation?topic=html/79a8677d-9460-4118-b27b-cef353dfbd92.htm" target="_blank">DigitalRune Physics</a>, 
            make extensive use of the class <span class="selflink">Parallel</span>. We highly recommend, that if you need 
            support for multithreading in your application, you should take advantage of this class. 
            (Using different solutions for concurrency can reduce performance.)
            </p><p><strong>Tasks:</strong><br />
            A task is an asynchronous operation which is started, for example, by calling 
            <a href="b24415a2-4aa2-3602-3253-10240f3161e5.htm">Start(Action)</a>. This method returns a handle of type <a href="5dc0dfd6-e14e-a3ea-a9a7-a04b4264d654.htm">Task</a>. 
            This handle can be used to query the status of the asynchronous operation (see 
            <a href="f7127ec2-f9f6-842e-f058-cceaf7cd349a.htm">IsComplete</a>). The method <a href="f77a5979-0b65-8dda-da74-8a2394a6a66e.htm">Wait<span id="LST87C6DFB1_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_28?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> can be called to wait until 
            the operation has completed.
            </p><p><strong>Futures (Task&lt;T&gt;):</strong><br />
            A future is an asynchronous operation that returns a value. A future is created, for example,
            by calling <a href="19ef0e80-16a0-fc9f-d6ee-1a0b87da7f56.htm">Start<span id="LST87C6DFB1_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_29?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_30?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST87C6DFB1_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_31?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST87C6DFB1_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_32?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a> and specifying a function that computes a 
            value. The method returns a handle of type <a href="b45f33ef-ee73-b02e-4dbd-5c4ddd844f27.htm">Task<span id="LST87C6DFB1_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_33?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST87C6DFB1_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_34?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>, which is similar to 
            <a href="5dc0dfd6-e14e-a3ea-a9a7-a04b4264d654.htm">Task</a>. The result of a future can be queried by calling 
            <a href="bbd9a8a8-f7d4-49f5-03e0-d32fc47329bc.htm">GetResult<span id="LST87C6DFB1_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_35?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>. Note that <a href="bbd9a8a8-f7d4-49f5-03e0-d32fc47329bc.htm">GetResult<span id="LST87C6DFB1_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_36?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> can only be called
            once - the handle becomes invalid after the first call!
            </p><p><strong>Background Tasks:</strong><br />
            Long running operations which may block (i.e. wait for I/O operation to finish) should be 
            scheduled as background tasks. Background tasks are created by using the method 
            <a href="64e9bac5-af82-0ca0-df15-3e4655f93d52.htm">StartBackground(Action)</a> (or one of its overloads). Background tasks will 
            not be scheduled using the <a href="a55e9e47-926e-716e-3453-03de0a9e0764.htm">Scheduler</a> (see below). Instead the class 
            <span class="selflink">Parallel</span> manages an additional pool of threads that are used for background 
            tasks. The processor affinity of these threads is not set automatically. The background tasks 
            will usually run on the same hardware thread where the background thread was created first or 
            run last. The processor affinity can be set manually from within the task by calling 
            <a href="http://msdn.microsoft.com/en-us/library/system.threading.thread.setprocessoraffinity.aspx" target="_blank">Thread.SetProcessorAffinity</a>.
            </p><p><strong>Exception Handling:</strong><br />
            The tasks executed asynchronously can raise exceptions. The exceptions are stored internally 
            and a <a href="295c2a39-7627-aba4-93f6-91ea6e9afc85.htm">TaskException</a> containing these exceptions is thrown when 
            <a href="f77a5979-0b65-8dda-da74-8a2394a6a66e.htm">Wait<span id="LST87C6DFB1_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_37?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> is called.
            </p><p><strong>Completion Callbacks:</strong><br />
            It is possible to specify a completion callbacks when starting a new tasks. For example, see 
            method <a href="9af831c4-a0ef-69da-015e-c8ff72b5c380.htm">Start(Action, Action)</a>. The completion callbacks are executed after the 
            corresponding tasks have completed. Completion callbacks are executed regardless of whether 
            tasks have completed successfully or have thrown an exception.
            </p><p>
            However, the callbacks are not executed immediately! 
            Instead, the method <a href="64c6a670-9ad6-e88a-9487-d4a3ad7c268b.htm">RunCallbacks<span id="LST87C6DFB1_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST87C6DFB1_38?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> needs to be called manually - usually on the 
            main thread - to invoke the callbacks. 
            </p><p><strong>Task Scheduling:</strong><br />
            The number of threads used for parallelization is determined by the task scheduler (see 
            <a href="a55e9e47-926e-716e-3453-03de0a9e0764.htm">Scheduler</a>). The task scheduler creates a number of threads and distributes the 
            tasks among these worker threads. The default task scheduler is a 
            <a href="11be11a3-8e57-2e57-a52b-fc0c60aba22e.htm">WorkStealingScheduler</a> that creates one thread per CPU core on Windows and 3 
            threads on Xbox 360 (on the hardware threads 3, 4, and 5). The number of worker threads can be
            specified in the constructor of the <a href="11be11a3-8e57-2e57-a52b-fc0c60aba22e.htm">WorkStealingScheduler</a>.
            </p><p>
            The property <a href="a55e9e47-926e-716e-3453-03de0a9e0764.htm">Scheduler</a> can be changed at runtime. The default task scheduler can
            be replaced with another task scheduler (e.g. with a <a href="11be11a3-8e57-2e57-a52b-fc0c60aba22e.htm">WorkStealingScheduler</a> that 
            uses a different number of tasks, or with a custom <a href="64797864-31bf-8012-f0b1-b031686fe655.htm">ITaskScheduler</a>). Replacing a
            task scheduler will affect all future tasks that have not yet been scheduled. However, it is
            highly recommended to use the default scheduler or specify the scheduler only once at the 
            startup of the application.
            </p><p><strong>Processor Affinity:</strong><br />
            In the .NET Compact Framework for Xbox 360 the processor affinity determines the processors on
            which a thread runs. Setting the processor affinity in Windows has no effect.
            </p><p>
            The processor affinity is defined as an array using the property 
            <a href="7799d3cf-1dba-84bb-163f-a0190578e003.htm">ProcessorAffinity</a>. Each entry in the array specifies the hardware thread that 
            the corresponding worker thread will use. The default value is <span class="code">{ 3, 4, 5, 1 }</span>. The 
            default task scheduler reads this array and assigns the worker threads to the specified 
            hardware threads. (See also 
            <a href="http://msdn.microsoft.com/en-us/library/system.threading.thread.setprocessoraffinity.aspx" target="_blank">Thread.SetProcessorAffinity</a> 
            in the MSDN Library to find out more.)
            </p><p><strong>Important:</strong> The processor affinity needs to be set before any parallel tasks
            are created or before a new <a href="11be11a3-8e57-2e57-a52b-fc0c60aba22e.htm">WorkStealingScheduler</a> is created. Changing the 
            processor affinity afterwards has no effect.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection">
            The following example demonstrates how to configure <span class="selflink">Parallel</span> to schedule tasks
            only on the hardware threads 3 and 4 of the Xbox 360.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAKABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAKABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAKABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAKABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Configure the class Parallel to use the hardware threads 3 and 4 on the Xbox 360.</span>
<span class="highlight-comment">// (Note: Setting the processor affinity has no effect on Windows.)</span>
Parallel.ProcessorAffinity = <span class="highlight-keyword">new</span>[] { <span class="highlight-number">3</span>, <span class="highlight-number">4</span> };

<span class="highlight-comment">// Create task scheduler that uses 2 worker threads.</span>
Parallel.Scheduler = <span class="highlight-keyword">new</span> WorkStealingScheduler(<span class="highlight-number">2</span>);

<span class="highlight-comment">// Note: Above code is usually run at the start of an application. It is not recommended to </span>
<span class="highlight-comment">// change the processor affinity or the task scheduler at runtime of the application.</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAKABA");</script><p>
            The following example demonstrates how a task is started.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAIABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAIABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAIABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAIABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Start a method call on another thread:</span>
<span class="highlight-comment">// DoSomeWork can either be an Action delegate, or an object which implements IWork.</span>
Task task = Parallel.Start(DoSomeWork);

<span class="highlight-comment">// Do something else on this thread for a while.</span>
DoSomethingElse();

<span class="highlight-comment">// Wait for the task to complete. This ensures that after this call returns, the task has </span>
<span class="highlight-comment">//finished.</span>
task.Wait();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAIABA");</script><p>
            The following example demonstrates how task can be used to compute values in parallel and 
            return the result when needed.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAGABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAGABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAGABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAGABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Task&lt;T&gt; is similar to Task, but you can retrieve a result from it.</span>
Task&lt;<span class="highlight-keyword">double</span>&gt; piTask = Parallel.Start(CalculatePi);

<span class="highlight-comment">// Do something else for a while.</span>
DoSomethingElse();

<span class="highlight-comment">// Retrieve the result. The caller will block until the task has completed. </span>
<span class="highlight-comment">// GetResult() can only be called once!</span>
<span class="highlight-keyword">double</span> pi = piTask.GetResult();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAGABA");</script><p>
            The following example demonstrates how to run a long task in the background to avoid that the 
            current thread is blocked.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAEABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAEABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Begin loading some files.</span>
Parallel.StartBackground(LoadFiles);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEABA");</script><p>
            The following demonstrates how a for-loop can be executed in parallel.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Sequential loop:</span>
<span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; count; i++)
{
  DoWork(i);
}

<span class="highlight-comment">// Same loop, but each iteration may happen in parallel on multiple threads.</span>
Parallel.For(<span class="highlight-number">0</span>, count, i =&gt;
{
  DoWork(i);
});</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script><p>
            The following demonstrates how a foreach-loop can be executed in parallel.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Sequential loop:</span>
<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> item <span class="highlight-keyword">in</span> list)
{
  DoWork(item);
}

<span class="highlight-comment">// Same loop, but each iteration may happen in parallel on multiple threads.</span>
Parallel.ForEach(list, item =&gt;
{
  DoWork(item);
});</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="34755e8a-951a-369c-717a-134c9c1a337e.htm">DigitalRune.Threading Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>