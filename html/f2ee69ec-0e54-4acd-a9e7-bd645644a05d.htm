<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How To: Solve a Non-Linear Equation</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="f2ee69ec-0e54-4acd-a9e7-bd645644a05d" /><meta name="Description" content="This section shows how to solve a non-linear equation." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2ac58586-0d4f-4625-bf4c-fc32591a5304.htm" title="DigitalRune Mathematics" tocid="2ac58586-0d4f-4625-bf4c-fc32591a5304">DigitalRune Mathematics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1f324567-e502-496a-a1ca-bdc232611133.htm" title="Articles" tocid="1f324567-e502-496a-a1ca-bdc232611133">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="dcccdb1a-a354-46e0-a792-6d866b751a77.htm" title="How To: Add DigitalRune Mathematics to a Project" tocid="dcccdb1a-a354-46e0-a792-6d866b751a77">How To: Add DigitalRune Mathematics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="492d3089-3c0f-43a5-b068-417fcd8f91e3.htm" title="How To: Compare Floating-Point Numbers" tocid="492d3089-3c0f-43a5-b068-417fcd8f91e3">How To: Compare Floating-Point Numbers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e3ea796c-f78d-4a57-8cb4-cb065513c928.htm" title="How To: Use Vectors, Matrices and Quaternions" tocid="e3ea796c-f78d-4a57-8cb4-cb065513c928">How To: Use Vectors, Matrices and Quaternions</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="f2ee69ec-0e54-4acd-a9e7-bd645644a05d.htm" title="How To: Solve a Non-Linear Equation" tocid="f2ee69ec-0e54-4acd-a9e7-bd645644a05d">How To: Solve a Non-Linear Equation</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="101938c1-f02f-4224-b64e-a95774668df8.htm" title="How To: Move Objects on a 3D Path" tocid="101938c1-f02f-4224-b64e-a95774668df8">How To: Move Objects on a 3D Path</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="81cd4f27-5ce5-4439-9a6c-121f2942f175.htm" title="Exponential Smoothing Filter" tocid="81cd4f27-5ce5-4439-9a6c-121f2942f175">Exponential Smoothing Filter</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="69aba1e3-d818-4c9d-9696-a5978ea88f84.htm" title="Scattered Interpolation" tocid="69aba1e3-d818-4c9d-9696-a5978ea88f84">Scattered Interpolation</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">How To: Solve a Non-Linear Equation</td></tr></table><span class="introStyle"></span><div class="introduction"><p>This section shows how to solve a non-linear equation.</p></div><div class="collapsibleAreaRegion" id="Namespaces"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Add DigitalRune.Mathematics namespaces</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    This example will use the class
                    <a href="5919bc30-10cc-d9d8-4d36-0b3110ae8256.htm">ImprovedNewtonRaphsonMethodF</a>
                    of the namespace
                    <a href="cca31f7d-1609-86ba-d0c9-25416dfa0e8f.htm">DigitalRune.Mathematics.Analysis</a>
                    to find a solution for a linear equation.
                    The samples will also use the type
                    <a href="aaa4772d-71bd-0e14-522a-3a294eeffdf6.htm">Numeric</a>
                    of the namespace
                    <a href="e0488d68-75ff-be52-f682-d9d366a123e7.htm">DigitalRune.Mathematics</a>.
                    These namespace must be imported at the beginning of the source code file:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> DigitalRune.Mathematics;
<span class="highlight-keyword">using</span> DigitalRune.Mathematics.Analysis;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAAA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Solve a non-linear equation</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    We want to find an <span class="math">x</span> that satisfies this non-linear equation:
                </p><p><span class="math">4x³ - 5x² + 3x - 4 = 7</span>, or
                </p><p><span class="math">Foo(x) = 7</span> with <span class="math">Foo(x) = 4x³ - 5x² + 3x - 4</span></p><p>
                    Therefore, we use the class
                    <a href="5919bc30-10cc-d9d8-4d36-0b3110ae8256.htm">ImprovedNewtonRaphsonMethodF</a>.
                    This class can solve the problem if the first order derivative of <span class="math">Foo(x)</span>
                    is known. In our case, the first order derivative is easy to compute as:
                </p><p><span class="math">Foo'(x) = 12x² - 10x + 3</span></p><p>
                    If the first derivative is not known, other classes of
                    <a href="cca31f7d-1609-86ba-d0c9-25416dfa0e8f.htm">DigitalRune.Mathematics.Analysis</a>
                    can be used which implement root finding algorithms that do not
                    require the first order derivative.
                </p><p>
                    In our code we define methods for <span class="math">Foo(x)</span> and <span class="math">Foo'(x)</span>:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAIABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAIABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAIABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAIABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">float</span> Foo(<span class="highlight-keyword">float</span> x)
{
  <span class="highlight-keyword">return</span> <span class="highlight-number">4</span> * x * x * x - <span class="highlight-number">5</span> * x * x + <span class="highlight-number">3</span> * x - <span class="highlight-number">4</span>;
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">float</span> FooDerived(<span class="highlight-keyword">float</span> x)
{
  <span class="highlight-keyword">return</span> <span class="highlight-number">12</span> * x * x  - <span class="highlight-number">10</span> * x  + <span class="highlight-number">3</span>;
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAIABAAA");</script><p>
                    Then, we create an instance of the root finding algorithm:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAGABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAGABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">ImprovedNewtonRaphsonMethodF rootFinder = <span class="highlight-keyword">new</span> ImprovedNewtonRaphsonMethodF(Foo, FooDerived);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABAAA");</script><p>
                    Next, we need to define an interval
                    <span class="math">
                        [x<sub>0</sub>, x<sub>1</sub>]
                    </span>
                    that contains the desired solution. Several solutions could exist for
                    the linear equation and the interval defines in which solutions we are
                    interested. We are looking for a solution near <span class="math">x = 0</span>. The root finder can
                    estimate an interval for us that contains the solution:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">float</span> x0 = <span class="highlight-number">0</span>;
<span class="highlight-keyword">float</span> x1 = <span class="highlight-number">0</span>;
rootFinder.ExpandBracket(<span class="highlight-keyword">ref</span> x0, <span class="highlight-keyword">ref</span> x1, <span class="highlight-number">7</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEABAAA");</script><p>
                    The solution is then computed with
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">float</span> x = rootFinder.FindRoot(x0, x1, <span class="highlight-number">7</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>
                    Finally, we check if the solution is correct. We use the class
                    <a href="aaa4772d-71bd-0e14-522a-3a294eeffdf6.htm">Numeric</a>
                    to test if <span class="math">Foo(x) = 7</span> as it should be. We could directly
                    make the comparison with <span class="code">Foo(x) == 7</span> (in C#).
                    But directly comparing floating-point numbers is not recommended because
                    tiny numerical errors will cause <span class="code">Foo(x)</span> to be,
                    for example, <span class="code">7.000007</span> - which is unequal to <span class="code">7</span>
                    but still within a reasonable tolerance.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">if</span> (Numeric.AreEqual(Foo(x), <span class="highlight-number">7</span>))
  Console.WriteLine(<span class="highlight-literal">"Solution is correct."</span>);
<span class="highlight-keyword">else</span>
  Console.WriteLine(<span class="highlight-literal">"Solution is wrong."</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>