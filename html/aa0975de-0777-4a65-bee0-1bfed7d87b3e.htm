<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Animating Objects and Properties</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="aa0975de-0777-4a65-bee0-1bfed7d87b3e" /><meta name="Description" content="This section explains how animations can be applied to animatable object and properties." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c2892dfd-491e-4e78-83d1-737e38f1acc9.htm" title="DigitalRune Animation" tocid="c2892dfd-491e-4e78-83d1-737e38f1acc9">DigitalRune Animation</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4c3588bf-0b84-4a29-8261-1dec48594c66.htm" title="Animation Manager" tocid="4c3588bf-0b84-4a29-8261-1dec48594c66">Animation Manager</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="126b4c8b-7f0a-4530-9e6b-081703fb74dd.htm" title="Animatable Objects and Properties" tocid="126b4c8b-7f0a-4530-9e6b-081703fb74dd">Animatable Objects and Properties</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="aa0975de-0777-4a65-bee0-1bfed7d87b3e.htm" title="Animating Objects and Properties" tocid="aa0975de-0777-4a65-bee0-1bfed7d87b3e">Animating Objects and Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="de13b766-a75f-4320-9928-4f9fa2bdc967.htm" title="Controlling Animations" tocid="de13b766-a75f-4320-9928-4f9fa2bdc967">Controlling Animations</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c3cf4f80-807c-412a-894f-b77313d88184.htm" title="Animation Types" tocid="c3cf4f80-807c-412a-894f-b77313d88184">Animation Types</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="93178dcc-a9b9-4cc6-b4df-ed693b988561.htm" title="3D Character Animation" tocid="93178dcc-a9b9-4cc6-b4df-ed693b988561">3D Character Animation</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="751c362c-34c2-497e-a36e-75af009f37ef.htm" title="Articles" tocid="751c362c-34c2-497e-a36e-75af009f37ef">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5bfb585d-77b4-4faa-b04c-1b626e09cddf.htm" title="FAQ" tocid="5bfb585d-77b4-4faa-b04c-1b626e09cddf">FAQ</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e3af2ccd-53d2-4eb6-bbf9-648449e0666f.htm" title="Class Diagrams" tocid="e3af2ccd-53d2-4eb6-bbf9-648449e0666f">Class Diagrams</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Animating Objects and Properties</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                This section explains how animations can be applied to animatable object and
                properties.
            </p></div><div class="collapsibleAreaRegion" id="Property"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Animating a property</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    The following example demonstrates how an <a href="12daff40-617d-de91-038e-142e7cc14993.htm">IAnimatableProperty<span id="LST6D97D11_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D97D11_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST6D97D11_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D97D11_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
                    can be animated.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create new property which can be animated.</span>
AnimatableProperty&lt;Vector3F&gt; position = <span class="highlight-keyword">new</span> AnimatableProperty&lt;Vector3F&gt;();

<span class="highlight-comment">// Create an animation that animates the position from point (0, 0, 0)</span>
<span class="highlight-comment">// to point (100, 200, 300) over a time of 3 seconds.</span>
<span class="highlight-keyword">var</span> animation = <span class="highlight-keyword">new</span> Vector3FFromToByAnimation
{
  From = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>),
  To = <span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">100</span>, <span class="highlight-number">200</span>, <span class="highlight-number">300</span>),
  Duration = TimeSpan.FromSeconds(<span class="highlight-number">3</span>),
};

<span class="highlight-comment">// Fetch the animation service from the global service provider.</span>
<span class="highlight-keyword">var</span> animationService = (IAnimationService)Game.Services.GetService(<span class="highlight-keyword">typeof</span>(IAnimationService));

<span class="highlight-comment">// Start the animation</span>
animationService.StartAnimation(animation, position);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="Object"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Animating an object</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    The advantage of an <a href="58812efb-838c-b735-4cc7-97ff368daa12.htm">IAnimatableObject</a>
                    is that multiple animations can be applied at once. The following example
                    to animations are combined into a "storyboard" (see class
                    <a href="4bfac403-dc33-8ea7-dc9d-b7ed7b9b2bca.htm">TimelineGroup</a>).
                    Each animation in the storyboard affects a different property. (The example
                    applies the storyboard to an <strong>AnimatableSprite</strong>
                    which was defined in the <a href="126b4c8b-7f0a-4530-9e6b-081703fb74dd.htm">previous section</a>.)
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create an object which can be animated.</span>
<span class="highlight-keyword">var</span> sprite = <span class="highlight-keyword">new</span> AnimatableSprite();

<span class="highlight-comment">// Move the sprite from point (100, 100) to point (300, 200) on screen.</span>
<span class="highlight-keyword">var</span> positionAnimation = <span class="highlight-keyword">new</span> Vector2FromToByAnimation
{
  TargetProperty = <span class="highlight-literal">"Position"</span>,
  From = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>),
  To = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">300</span>, <span class="highlight-number">200</span>),
};

<span class="highlight-comment">// Change its color from red to blue.</span>
<span class="highlight-keyword">var</span> colorAnimation = <span class="highlight-keyword">new</span> ColorFromToByAnimation
{
  TargetProperty = <span class="highlight-literal">"Color"</span>,
  From = Color.Red,
  To = Color.Blue,
};

<span class="highlight-comment">// Group the animations together in one 'storyboard'.</span>
<span class="highlight-keyword">var</span> storyboard = <span class="highlight-keyword">new</span> TimelineGroup { positionAnimation, colorAnimation };

<span class="highlight-comment">// Fetch the animation service from the service provider.</span>
<span class="highlight-keyword">var</span> animationService = (IAnimationService)Game.Services.GetService(<span class="highlight-keyword">typeof</span>(IAnimationService));

<span class="highlight-comment">// Start the animation</span>
animationService.StartAnimation(storyboard, sprite);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>
                    The property <a href="9bc501ed-edaf-9ec9-7bb8-03e02d0863ba.htm">TargetProperty</a>
                    assigns an animation to a certain property. The animation system automatically
                    applies the animations to the matching properties. (Note that the type of the
                    animation value needs to match the type of the property value.)
                </p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Important note" /> Important</th></tr><tr><td><p>
                        Note that the sprite's current position does not change immediately after calling
                        <a href="3870b08a-c4b7-0289-9eac-46ee8d373b91.htm">StartAnimation</a>!
                        The method only schedules the animation for playback. The new animation values
                        are computed when <a href="193da52f-4320-4cdb-8039-9ba610735dbf.htm">AnimationManager<span id="LST6D97D11_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D97D11_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Update(TimeSpan)</a>
                        is called and the result are written in
                        <a href="9234f8b3-15ef-c348-8003-28f2c527a350.htm">AnimationManager<span id="LST6D97D11_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D97D11_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ApplyAnimations<span id="LST6D97D11_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D97D11_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.
                    </p><p>
                        The next section "<a href="de13b766-a75f-4320-9928-4f9fa2bdc967.htm">Controlling Animations</a>" shows
                        how new animation values can be applied immediately if necessary.
                    </p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="Group"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Animating a group of objects</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    It is also possible to go one step further. Animations for different objects
                    can be grouped together into a single storyboard.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Create some sprites.</span>
<span class="highlight-keyword">var</span> sprites = <span class="highlight-keyword">new</span> List&lt;AnimatableSprite&gt;
{
  <span class="highlight-keyword">new</span> AnimatableSprite() { Name = <span class="highlight-literal">"SpriteA"</span> };
  <span class="highlight-keyword">new</span> AnimatableSprite() { Name = <span class="highlight-literal">"SpriteB"</span> };
  <span class="highlight-keyword">new</span> AnimatableSprite() { Name = <span class="highlight-literal">"SpriteC"</span> };
};

<span class="highlight-comment">// Move spriteA from point (100, 100) to point (300, 100) on screen and at </span>
<span class="highlight-comment">// the same time change its color from red to blue.</span>
<span class="highlight-keyword">var</span> positionAnimation = <span class="highlight-keyword">new</span> Vector2FromToByAnimation
{
  TargetProperty = <span class="highlight-literal">"Position"</span>,
  From = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>),
  To = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">300</span>, <span class="highlight-number">100</span>),
};
<span class="highlight-keyword">var</span> colorAnimation = <span class="highlight-keyword">new</span> ColorFromToByAnimation
{
  TargetProperty = <span class="highlight-literal">"Color"</span>,
  From = Color.Red,
  To = Color.Blue,
};

<span class="highlight-comment">// Group the animations together.</span>
<span class="highlight-keyword">var</span> animationA = <span class="highlight-keyword">new</span> TimelineGroup(); 
animationA.TargetObject = <span class="highlight-literal">"SpriteA"</span>;
animationA.Add(positionAnimation);
animationA.Add(colorAnimation);

<span class="highlight-comment">// Move spriteB from point (100, 200) to point (300, 200) on screen.</span>
<span class="highlight-keyword">var</span> animationB = <span class="highlight-keyword">new</span> Vector2FromToByAnimation
{
  TargetObject = <span class="highlight-literal">"SpriteB"</span>,
  TargetProperty = <span class="highlight-literal">"Position"</span>,
  From = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">100</span>, <span class="highlight-number">200</span>),
  To = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">300</span>, <span class="highlight-number">200</span>),
};

<span class="highlight-comment">// Move spriteC from point (100, 300) to point (300, 300) on screen.</span>
<span class="highlight-keyword">var</span> animationC = <span class="highlight-keyword">new</span> Vector2FromToByAnimation
{
  TargetObject = <span class="highlight-literal">"SpriteC"</span>,
  TargetProperty = <span class="highlight-literal">"Position"</span>,
  From = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">100</span>, <span class="highlight-number">300</span>),
  To = <span class="highlight-keyword">new</span> Vector2(<span class="highlight-number">300</span>, <span class="highlight-number">300</span>),
};

<span class="highlight-comment">// Now, group all animations together in one 'storyboard'.</span>
<span class="highlight-keyword">var</span> storyboard = <span class="highlight-keyword">new</span> TimelineGroup { animationA, animationB, animationC };

<span class="highlight-comment">// Fetch the animation service from the global service provider.</span>
<span class="highlight-keyword">var</span> animationService = (IAnimationService)Game.Services.GetService(<span class="highlight-keyword">typeof</span>(IAnimationService));

<span class="highlight-comment">// Start the storyboard.</span>
animationService.StartAnimation(storyboard, sprites);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>
                    The property <a href="3605b5f4-791b-65f2-565f-f707b9f647f2.htm">TargetObject</a>
                    assigns each animation or timeline group to an object. The animation system
                    then automatically applies the animations to the appropriate objects.
                </p><p>
                    As shown in the example above, <a href="4bfac403-dc33-8ea7-dc9d-b7ed7b9b2bca.htm">TimelineGroup</a>s
                    can be nested. A timeline group can contain one or more animations or timeline groups.
                </p></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>