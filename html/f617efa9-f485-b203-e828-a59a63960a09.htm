<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LensFlare.OnGetSizeAndIntensity Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="OnGetSizeAndIntensity method" /><meta name="System.Keywords" content="LensFlare.OnGetSizeAndIntensity method" /><meta name="Microsoft.Help.F1" content="DigitalRune.Graphics.LensFlare.OnGetSizeAndIntensity" /><meta name="Microsoft.Help.Id" content="M:DigitalRune.Graphics.LensFlare.OnGetSizeAndIntensity(DigitalRune.Graphics.SceneGraph.LensFlareNode,DigitalRune.Graphics.RenderContext,System.Int32,System.Int32,System.Single@,System.Single@)" /><meta name="Description" content="Called when the size and intensity of a lens flare is determined." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="DigitalRune.Graphics" /><meta name="file" content="f617efa9-f485-b203-e828-a59a63960a09" /><meta name="guid" content="f617efa9-f485-b203-e828-a59a63960a09" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Class Library Reference" tocid="d75eb659-6335-53f6-af7a-81814a21ab7f">Class Library Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5fafcc04-cad8-e0aa-da2f-1c06206f3978.htm" title="DigitalRune.Graphics" tocid="5fafcc04-cad8-e0aa-da2f-1c06206f3978">DigitalRune.Graphics</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="925a5fb1-1d26-7aab-84d2-c34d9df806e5.htm" title="LensFlare Class" tocid="925a5fb1-1d26-7aab-84d2-c34d9df806e5">LensFlare Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="efea9bfa-87e0-8f33-2751-107d1ef5ecf0.htm" title="LensFlare Methods" tocid="efea9bfa-87e0-8f33-2751-107d1ef5ecf0">LensFlare Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5aa48449-b46d-f7d1-20cc-66c4e52a7d69.htm" title="Clone Method " tocid="5aa48449-b46d-f7d1-20cc-66c4e52a7d69">Clone Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="555b953a-c0ed-a214-f10d-94745365124e.htm" title="CloneCore Method " tocid="555b953a-c0ed-a214-f10d-94745365124e">CloneCore Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="12419cfe-8d66-e8ed-fcc9-acc61ad029ca.htm" title="CreateInstanceCore Method " tocid="12419cfe-8d66-e8ed-fcc9-acc61ad029ca">CreateInstanceCore Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="f617efa9-f485-b203-e828-a59a63960a09.htm" title="OnGetSizeAndIntensity Method " tocid="f617efa9-f485-b203-e828-a59a63960a09">OnGetSizeAndIntensity Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">LensFlare<span id="LST1459652E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_0?cpp=::|nu=.");</script>OnGetSizeAndIntensity Method </td></tr></table><span class="introStyle"></span><div class="summary">
            Called when the size and intensity of a lens flare is determined.
            </div><p> </p><strong>Namespace:</strong> <a href="5fafcc04-cad8-e0aa-da2f-1c06206f3978.htm">DigitalRune.Graphics</a><br /><strong>Assembly:</strong> DigitalRune.Graphics (in DigitalRune.Graphics.dll) Version: 1.2.0.0 (1.2.1.14562)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">OnGetSizeAndIntensity</span>(
	<span class="identifier">LensFlareNode</span> <span class="parameter">node</span>,
	<span class="identifier">RenderContext</span> <span class="parameter">context</span>,
	<span class="identifier">int</span> <span class="parameter">visiblePixels</span>,
	<span class="identifier">int</span> <span class="parameter">totalPixels</span>,
	<span class="keyword">out</span> <span class="identifier">float</span> <span class="parameter">size</span>,
	<span class="keyword">out</span> <span class="identifier">float</span> <span class="parameter">intensity</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Protected</span> <span class="keyword">Overridable</span> <span class="keyword">Sub</span> <span class="identifier">OnGetSizeAndIntensity</span> ( 
	<span class="parameter">node</span> <span class="keyword">As</span> <span class="identifier">LensFlareNode</span>,
	<span class="parameter">context</span> <span class="keyword">As</span> <span class="identifier">RenderContext</span>,
	<span class="parameter">visiblePixels</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">totalPixels</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">size</span> <span class="keyword">As</span> <span class="identifier">Single</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">intensity</span> <span class="keyword">As</span> <span class="identifier">Single</span>
)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">protected</span>:
<span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">OnGetSizeAndIntensity</span>(
	<span class="identifier">LensFlareNode</span>^ <span class="parameter">node</span>, 
	<span class="identifier">RenderContext</span>^ <span class="parameter">context</span>, 
	<span class="identifier">int</span> <span class="parameter">visiblePixels</span>, 
	<span class="identifier">int</span> <span class="parameter">totalPixels</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">float</span>% <span class="parameter">size</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">float</span>% <span class="parameter">intensity</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">abstract</span> <span class="identifier">OnGetSizeAndIntensity</span> : 
        <span class="parameter">node</span> : <span class="identifier">LensFlareNode</span> * 
        <span class="parameter">context</span> : <span class="identifier">RenderContext</span> * 
        <span class="parameter">visiblePixels</span> : <span class="identifier">int</span> * 
        <span class="parameter">totalPixels</span> : <span class="identifier">int</span> * 
        <span class="parameter">size</span> : <span class="identifier">float32</span> <span class="keyword">byref</span> * 
        <span class="parameter">intensity</span> : <span class="identifier">float32</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="keyword">unit</span> 
<span class="keyword">override</span> <span class="identifier">OnGetSizeAndIntensity</span> : 
        <span class="parameter">node</span> : <span class="identifier">LensFlareNode</span> * 
        <span class="parameter">context</span> : <span class="identifier">RenderContext</span> * 
        <span class="parameter">visiblePixels</span> : <span class="identifier">int</span> * 
        <span class="parameter">totalPixels</span> : <span class="identifier">int</span> * 
        <span class="parameter">size</span> : <span class="identifier">float32</span> <span class="keyword">byref</span> * 
        <span class="parameter">intensity</span> : <span class="identifier">float32</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="keyword">unit</span> </pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">node</span></dt><dd>Type: <a href="ef131956-986e-03e9-174e-4fb72c98e4e3.htm">DigitalRune.Graphics.SceneGraph<span id="LST1459652E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LensFlareNode</a><br />The lens flare node.</dd><dt><span class="parameter">context</span></dt><dd>Type: <a href="ea575bf4-8a2a-e02a-be92-c5821bff1ad7.htm">DigitalRune.Graphics<span id="LST1459652E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>RenderContext</a><br />The render context.</dd><dt><span class="parameter">visiblePixels</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST1459652E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />
            The number of visible pixels as determined by the last hardware occlusion query. 
            (Not available in Reach profile.)
            </dd><dt><span class="parameter">totalPixels</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST1459652E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />
            The total number of pixels tested in the hardware occlusion query. 
            (Not available in Reach profile.)
            </dd><dt><span class="parameter">size</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/3www918f" target="_blank">System<span id="LST1459652E_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Single</a><span id="LST1459652E_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_6?cpp=%");</script><br />
            Out: The actual size of the lens flare in relative to the viewport.
            </dd><dt><span class="parameter">intensity</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/3www918f" target="_blank">System<span id="LST1459652E_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Single</a><span id="LST1459652E_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1459652E_8?cpp=%");</script><br />Out: The actual intensity of the lens flare.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><strong>Notes to Inheritors:</strong><br />
            This method can be overridden in derived types to adjust the size and intensity of the lens
            flare. The base implementation creates a lens flare with constant size. The intensity
            depends on the number of visible pixels and the fog.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">protected</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">void</span> OnGetSizeAndIntensity(LensFlareNode node, RenderContext context, <span class="highlight-keyword">int</span> visiblePixels, <span class="highlight-keyword">int</span> totalPixels, <span class="highlight-keyword">out</span> <span class="highlight-keyword">float</span> size, <span class="highlight-keyword">out</span> <span class="highlight-keyword">float</span> intensity)
{
  <span class="highlight-comment">// Constant size.</span>
  <span class="highlight-keyword">var</span> size = Size;

  intensity = node.Intensity * Intensity;

  <span class="highlight-comment">// Intensity depends on the number of visible (unoccluded) pixels.</span>
  <span class="highlight-keyword">if</span> (context.GraphicsService.GraphicsDevice.GraphicsProfile == GraphicsProfile.HiDef)
    intensity *= (<span class="highlight-keyword">float</span>)visiblePixels / totalPixels;

  <span class="highlight-comment">// Fog decreases the intensity.</span>
  <span class="highlight-keyword">var</span> scene = context.Scene;
  <span class="highlight-keyword">var</span> cameraNode = context.CameraNode;
  <span class="highlight-keyword">if</span> (scene != <span class="highlight-keyword">null</span> &amp;&amp; cameraNode != <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">var</span> query = scene.Query&lt;FogQuery&gt;(cameraNode);
    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> fogNode <span class="highlight-keyword">in</span> query.FogNodes)
    {
      <span class="highlight-keyword">var</span> flarePosition = IsDirectional   <span class="highlight-comment">// For directional flares, choose a position "far" away.</span>
                        ? cameraNode.PoseWorld.Position + node.PoseWorld.Orientation.GetColumn(<span class="highlight-number">2</span>) * cameraNode.Camera.Projection.Far
                        : node.PoseWorld.Position;
      intensity *= (<span class="highlight-number">1</span> - fogNode.Fog.GetIntensity(fogNode, cameraNode, flarePosition));
    }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="925a5fb1-1d26-7aab-84d2-c34d9df806e5.htm">LensFlare Class</a></div><div class="seeAlsoStyle"><a href="5fafcc04-cad8-e0aa-da2f-1c06206f3978.htm">DigitalRune.Graphics Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>