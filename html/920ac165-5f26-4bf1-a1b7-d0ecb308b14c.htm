<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How To: Create a Composite Rigid Body</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="920ac165-5f26-4bf1-a1b7-d0ecb308b14c" /><meta name="Description" content="In some cases a rigid body consists of parts with different densities and materials. For example: A hammer has a metal head and a wooden shaft. This section shows how to model these kind of rigid bodies." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="79a8677d-9460-4118-b27b-cef353dfbd92.htm" title="DigitalRune Physics" tocid="79a8677d-9460-4118-b27b-cef353dfbd92">DigitalRune Physics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="61ea0a18-fef3-4e46-be80-e146b5e00d80.htm" title="Articles" tocid="61ea0a18-fef3-4e46-be80-e146b5e00d80">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3862d6f1-13c0-4ad9-8e4a-5edfa265bf8a.htm" title="How To: Add DigitalRune Physics to a Project" tocid="3862d6f1-13c0-4ad9-8e4a-5edfa265bf8a">How To: Add DigitalRune Physics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4473ac4f-06c0-4ebb-8eb5-fd6891df21b6.htm" title="How To: Setup and Run a Simulation" tocid="4473ac4f-06c0-4ebb-8eb5-fd6891df21b6">How To: Setup and Run a Simulation</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="920ac165-5f26-4bf1-a1b7-d0ecb308b14c.htm" title="How To: Create a Composite Rigid Body" tocid="920ac165-5f26-4bf1-a1b7-d0ecb308b14c">How To: Create a Composite Rigid Body</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="660bd2ec-5313-4d7b-8431-388e3ae6fc9d.htm" title="How To: Visualize Ragdoll Joints" tocid="660bd2ec-5313-4d7b-8431-388e3ae6fc9d">How To: Visualize Ragdoll Joints</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="be2efc8b-79a6-4be2-bd5e-f0a17579b02b.htm" title="How To: Create Ragdolls" tocid="be2efc8b-79a6-4be2-bd5e-f0a17579b02b">How To: Create Ragdolls</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="cb1a3d03-4603-4086-aaea-f91de81e7d8a.htm" title="Smooth Movement over Triangle Mesh" tocid="cb1a3d03-4603-4086-aaea-f91de81e7d8a">Smooth Movement over Triangle Mesh</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5406f8ea-ffac-480c-9e98-ee3fa8eb741b.htm" title="External Articles" tocid="5406f8ea-ffac-480c-9e98-ee3fa8eb741b">External Articles</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">How To: Create a Composite Rigid Body</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                In some cases a rigid body consists of parts with different densities and materials.
                For example: A hammer has a metal head and a wooden shaft. This section
                shows how to model these kind of rigid bodies.
            </p></div><div class="collapsibleAreaRegion" id="Composition"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Composite rigid bodies</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    To model rigid bodies with different mass parts, create a rigid body with a
                    <a href="467bd69b-e7ce-490d-fedd-a9495832769c.htm">CompositeShape</a>.
                    Normally, all child objects in the
                    <a href="467bd69b-e7ce-490d-fedd-a9495832769c.htm">CompositeShape</a>
                    have the same density - but: If the child of a
                    <a href="467bd69b-e7ce-490d-fedd-a9495832769c.htm">CompositeShape</a>
                    is a
                    <a href="45d87f0c-570b-1672-5d65-1a7ba131e533.htm">RigidBody</a>,
                    the mass properties of this child body are used.
                </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
                        The children of a
                        <a href="467bd69b-e7ce-490d-fedd-a9495832769c.htm">CompositeShape</a>
                        are of the type
                        <a href="14f1e616-5c53-aac7-dd8d-1a21f76ea472.htm">IGeometricObject</a>
                        and a
                        <a href="45d87f0c-570b-1672-5d65-1a7ba131e533.htm">RigidBody</a>
                        implements
                        <a href="14f1e616-5c53-aac7-dd8d-1a21f76ea472.htm">IGeometricObject</a>.
                        Therefore, a rigid body can be the child of a
                        <a href="467bd69b-e7ce-490d-fedd-a9495832769c.htm">CompositeShape</a>.
                    </p></td></tr></table></div><p>
                    Now, to model a hammer:
                    Create a rigid body for the metal head. For example:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAMABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAMABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAMABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAMABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">BoxShape headShape = <span class="highlight-keyword">new</span> BoxShape(<span class="highlight-number">0.03</span>f, <span class="highlight-number">0.03</span>f, <span class="highlight-number">0.1</span>f);
MassFrame headMass = MassFrame.FromShapeAndDensity(headShape, Vector3F.One, <span class="highlight-number">7850</span>, <span class="highlight-number">0.01</span>f, <span class="highlight-number">3</span>);
UniformMaterial metal = <span class="highlight-keyword">new</span> UniformMaterial(<span class="highlight-literal">"Metal"</span>)
{
  StaticFriction = <span class="highlight-number">0.6</span>f,
  DynamicFriction = <span class="highlight-number">0.6</span>f,
  Restitution = <span class="highlight-number">0.2</span>f,
};
RigidBody head = <span class="highlight-keyword">new</span> RigidBody(headShape, headMass, metal)
{
  Pose = <span class="highlight-keyword">new</span> Pose(<span class="highlight-keyword">new</span> Vector3F(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>f, <span class="highlight-number">0</span>))   <span class="highlight-comment">// The relative hammer head position in "hammer space".</span>
};</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAMABAAA");</script><p>
                    Create a second rigid body for the wooden shaft with different mass and
                    different material properties:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAKABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAKABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAKABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAKABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CylinderShape shaftShape = <span class="highlight-keyword">new</span> CylinderShape(<span class="highlight-number">0.015</span>f, <span class="highlight-number">0.2</span>f);
MassFrame shaftMass = MassFrame.FromShapeAndDensity(shaftShape, Vector3F.One, <span class="highlight-number">700</span>, <span class="highlight-number">0.01</span>f, <span class="highlight-number">3</span>);
UniformMaterial wood = <span class="highlight-keyword">new</span> UniformMaterial(<span class="highlight-literal">"Wood"</span>)
{
  StaticFriction = <span class="highlight-number">0.5</span>f,
  DynamicFriction = <span class="highlight-number">0.3</span>f,
  Restitution = <span class="highlight-number">0.2</span>f,
};
RigidBody shaft = <span class="highlight-keyword">new</span> RigidBody(shaftShape, shaftMass, wood);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAKABAAA");</script><p>
                    Then, add both rigid bodies to a composite shape:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAIABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAIABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAIABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAIABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CompositeShape hammerShape = <span class="highlight-keyword">new</span> CompositeShape();
hammerShape.Children.Add(head);
hammerShape.Children.Add(shaft);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAIABAAA");</script><p>
                    Use
                    <a href="782353ab-7cf5-1633-b5ba-d7df3e715563.htm">MassFrame<span id="LSTC98DE343_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC98DE343_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>FromShapeAndDensity(Shape, Vector3F, Single, Single, Int32)</a>
                    to compute the mass frame for the composite shape.
                    <a href="782353ab-7cf5-1633-b5ba-d7df3e715563.htm">FromShapeAndDensity</a>
                    automatically uses the mass properties of the child bodies:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAGABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAGABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">MassFrame hammerMass = MassFrame.FromShapeAndDensity(hammerShape, Vector3F.One, <span class="highlight-number">100</span>, <span class="highlight-number">0.01</span>f, <span class="highlight-number">3</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABAAA");</script><p>
                    The density parameter in this method call is irrelevant because each child
                    of the composite has pre-defined mass properties.
                </p><p>
                    If the hammer uses a
                    <a href="c710afdb-aaa4-e703-71b3-8a5d5b7fb824.htm">CompositeMaterial</a>,
                    the simulation will automatically use the materials of the child bodies:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CompositeMaterial compositeMaterial = <span class="highlight-keyword">new</span> CompositeMaterial();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABAAA");</script><p>
                    The first two bodies are only used to define the composite shape - they are
                    never added to the simulation directly. Only the composite rigid body
                    is added to the simulation:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">RigidBody hammer = <span class="highlight-keyword">new</span> RigidBody(hammerShape, hammerMass, compositeMaterial);
mySimulation.RigidBodies.Add(hammer);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABAAA");</script><p>
                    For the simulation the hammer is a single rigid body. The child bodies are
                    only used to define mass and material properties.
                </p></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>