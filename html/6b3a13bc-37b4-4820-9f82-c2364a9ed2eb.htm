<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Rendering</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="6b3a13bc-37b4-4820-9f82-c2364a9ed2eb" /><meta name="Description" content="This topic provides information for implementing a rendering pipeline." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0a8eb9ca-74ae-4746-9289-93d909b07e22.htm" title="DigitalRune Graphics" tocid="0a8eb9ca-74ae-4746-9289-93d909b07e22">DigitalRune Graphics</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7d5a0abe-8231-452c-895c-e6dbab83822b.htm" title="Graphics Programming" tocid="7d5a0abe-8231-452c-895c-e6dbab83822b">Graphics Programming</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6b3a13bc-37b4-4820-9f82-c2364a9ed2eb.htm" title="Rendering" tocid="6b3a13bc-37b4-4820-9f82-c2364a9ed2eb">Rendering</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ba13b3e9-cf11-4a8d-959d-338de0a4aa81.htm" title="Render Context" tocid="ba13b3e9-cf11-4a8d-959d-338de0a4aa81">Render Context</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0d6d2221-c9da-4aa7-bee4-4d2bacae9bc4.htm" title="Rendering Scene Nodes" tocid="0d6d2221-c9da-4aa7-bee4-4d2bacae9bc4">Rendering Scene Nodes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1b907017-5904-440d-b5fa-75c75ab60e6b.htm" title="Rendering Debug Information" tocid="1b907017-5904-440d-b5fa-75c75ab60e6b">Rendering Debug Information</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Rendering</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                This topic provides information for implementing a rendering pipeline.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#General">General</a></li><li class="outlineSectionEntry"><a href="#Example">Example render pipeline</a></li><li class="outlineSectionEntry"><a href="#DeferredLighting">Deferred lighting (a.k.a. light pre-pass renderer)</a></li><li class="outlineSectionEntry"><a href="#Subtopics">Subtopics</a></li></ul></div><div class="collapsibleAreaRegion" id="General"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />General</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
                    DigitalRune Graphics is in general not limited to a single type of rendering pipeline. The
                    library can theoretically be used to create
                </p><ul><li>
                        a traditional forward renderer,
                    </li><li>
                        a light pre-pass renderer (a.k.a. deferred lighting),
                    </li><li>
                        a fully deferred renderer,
                    </li><li>
                        an ad-hoc renderer,
                    </li><li>
                        etc.
                    </li></ul><p>
                    The namespace <a href="8aef5e3f-fb5a-58b3-6317-bfb5415921ed.htm">DigitalRune.Graphics.Rendering</a>
                    provides renderers which can be used to create a forward or a light pre-pass
                    renderer. Additional renderers and samples for additional rendering pipelines may be added in the future.
                </p></div><div class="collapsibleAreaRegion" id="Example"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example render pipeline</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    The rendering is usually performed in a
                    <a href="2e870374-8980-4fbc-9426-1d1a6e2d9766.htm">graphics screen</a>.
                    Here is an example of a simple render pipeline which can draw opaque meshes,
                    alpha blended billboards and particles, and debug graphics.
                    More detailed examples for different render pipelines can be found in the
                    <a href="dde51686-4f07-4c54-95d4-756ec929cb57.htm">Samples</a>.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> MyGraphicsScreen : GraphicsScreen
{
  ...

  <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnRender(RenderContext context)
  {
    <span class="highlight-comment">// Set the current camera and current scene in the render context.</span>
    context.CameraNode = CameraNode;
    context.Scene = Scene;

    <span class="highlight-comment">// Clear background.</span>
    <span class="highlight-keyword">var</span> graphicsDevice = GraphicsService.GraphicsDevice;
    graphicsDevice.Clear(BackgroundColor);      

    <span class="highlight-comment">// Frustum Culling: Get all the scene nodes that intersect the camera frustum.</span>
    <span class="highlight-keyword">var</span> query = Scene.Query&lt;CameraFrustumQuery&gt;(context.CameraNode, context);

    <span class="highlight-comment">// Render opaque meshes that are visible from the camera using the "Default" </span>
    <span class="highlight-comment">// render pass of the materials.</span>
    graphicsDevice.DepthStencilState = DepthStencilState.Default;
    graphicsDevice.RasterizerState = RasterizerState.CullCounterClockwise;
    graphicsDevice.BlendState = BlendState.Opaque;
    graphicsDevice.SamplerStates[<span class="highlight-number">0</span>] = SamplerState.LinearWrap;      
    context.RenderPass = <span class="highlight-literal">"Default"</span>;
    _meshRenderer.Render(query.SceneNodes, context);
    context.RenderPass = <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// Render billboards and particles systems using alpha blending.</span>
    graphicsDevice.DepthStencilState = DepthStencilState.DepthRead;
    graphicsDevice.RasterizerState = RasterizerState.CullNone;
    graphicsDevice.BlendState = BlendState.NonPremultiplied;
    graphicsDevice.SamplerStates[<span class="highlight-number">0</span>] = SamplerState.LinearWrap;
    _billboardRenderer.Render(query.SceneNodes, context);

    <span class="highlight-comment">// Render debug graphics.</span>
    DebugRenderer.Render(context);

    <span class="highlight-comment">// Clean up.</span>
    context.CameraNode = <span class="highlight-keyword">null</span>;
    context.Scene = <span class="highlight-keyword">null</span>;
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="DeferredLighting"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Deferred lighting (a.k.a. light pre-pass renderer)</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    The namespace <a href="8aef5e3f-fb5a-58b3-6317-bfb5415921ed.htm">DigitalRune.Graphics.Rendering</a>
                    provides classes for implementing a deferred lighting renderer (a.k.a. light pre-pass).
                </p><p>
                    The <em>DeferredLightingSample</em> demonstrates how to implement a light
                    pre-pass renderer. Check the source code for more information.
                </p></div><div class="collapsibleAreaRegion" id="Subtopics"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Subtopics</span></div><div id="ID4RBSection" class="collapsibleSection"><ul class="noBullet"><li><a href="ba13b3e9-cf11-4a8d-959d-338de0a4aa81.htm">Render Context</a></li><li><a href="0d6d2221-c9da-4aa7-bee4-4d2bacae9bc4.htm">Rendering Scene Nodes</a></li><li><a href="1b907017-5904-440d-b5fa-75c75ab60e6b.htm">Rendering Debug Information</a></li></ul></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>