<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How To: Add Support for New Effect Parameters</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="c2b20686-df99-4d21-b5b6-fd7d58a5f407" /><meta name="Description" content="DigitalRune Graphics automatically creates bindings for the most common parameters in DirectX Effect files. This topic demonstrates how to add support for new types of parameters." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0a8eb9ca-74ae-4746-9289-93d909b07e22.htm" title="DigitalRune Graphics" tocid="0a8eb9ca-74ae-4746-9289-93d909b07e22">DigitalRune Graphics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7a376fe-d747-4c66-ad76-2bc95232af85.htm" title="Articles" tocid="a7a376fe-d747-4c66-ad76-2bc95232af85">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a089a32a-ee98-4490-8a3c-9df6beb0b1c1.htm" title="How To: Add DigitalRune Graphics to a Project" tocid="a089a32a-ee98-4490-8a3c-9df6beb0b1c1">How To: Add DigitalRune Graphics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="578746ac-7e3c-42b5-b9c9-6900714c966e.htm" title="How To: Add a Custom Scene Node" tocid="578746ac-7e3c-42b5-b9c9-6900714c966e">How To: Add a Custom Scene Node</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="66ba3eee-84a2-4ff2-935f-77b0afa44a89.htm" title="How To: Change Effect Parameter Bindings" tocid="66ba3eee-84a2-4ff2-935f-77b0afa44a89">How To: Change Effect Parameter Bindings</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="c2b20686-df99-4d21-b5b6-fd7d58a5f407.htm" title="How To: Add Support for New Effect Parameters" tocid="c2b20686-df99-4d21-b5b6-fd7d58a5f407">How To: Add Support for New Effect Parameters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="12ff9049-3aea-4b01-affe-3aa37eea9ce2.htm" title="Cloud Quads" tocid="12ff9049-3aea-4b01-affe-3aa37eea9ce2">Cloud Quads</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1683bd3a-951a-4e79-b43e-ed0f3ee00e31.htm" title="Environment Map Reflections" tocid="1683bd3a-951a-4e79-b43e-ed0f3ee00e31">Environment Map Reflections</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9a8c8b37-b996-477a-aeab-5d92714be3ca.htm" title="Material Capture (MatCap) Shaders" tocid="9a8c8b37-b996-477a-aeab-5d92714be3ca">Material Capture (MatCap) Shaders</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c9764263-9fc9-43cf-86cb-11daa5090dc2.htm" title="Parallax Mapping" tocid="c9764263-9fc9-43cf-86cb-11daa5090dc2">Parallax Mapping</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7f44f475-cacd-42d1-8c7d-db6429029245.htm" title="Refraction Rendering" tocid="7f44f475-cacd-42d1-8c7d-db6429029245">Refraction Rendering</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="fa431d48-b457-4c70-a590-d44b0840ab1e.htm" title="Screen-Door Transparency" tocid="fa431d48-b457-4c70-a590-d44b0840ab1e">Screen-Door Transparency</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">How To: Add Support for New Effect Parameters</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                DigitalRune Graphics automatically creates bindings for the most common parameters in DirectX
                Effect files. This topic demonstrates how to add support for new types of parameters.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Problem">Problem</a></li><li class="outlineSectionEntry"><a href="#Solution">Solution</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="Problem"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Problem</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    Let's assume that the graphics engine needs to support a new type of effect parameter.
                    A new material needs a random value. The effect parameter is of type
                    <span class="code">float</span> and the value should always lie between 0 and 1. The value should
                    be evaluated "per instance". That means, each mesh instance should use a different value
                    in the shader.
                </p><p>
                    The effect parameter may be declared in different ways in the effect files (.fx). The
                    parameter name may be <span class="code">"RandomValue"</span>. For example:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">float RandomValue;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADACAAA");</script><p>
                    Or the effect parameter can have a semantic <span class="code">"RANDOMVALUE"</span>. For
                    example:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">float Value : RANDOMVALUE;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABACAAA");</script><p>
                    In either case, the engine should automatically recognize the effect parameter and set a
                    random value at runtime.
                </p></div><div class="collapsibleAreaRegion" id="Solution"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Solution</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    First, a new
                    <a href="c011d31a-2922-bf76-eadf-472be72e309a.htm">IEffectInterpreter</a>
                    needs to be implemented:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAHABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAHABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> DigitalRune.Graphics.Effects;
<span class="highlight-keyword">using</span> Microsoft.Xna.Framework.Graphics;

<span class="highlight-keyword">namespace</span> MyGame
{
  <span class="highlight-keyword">class</span> CustomEffectInterpreter : IEffectInterpreter
  {
    <span class="highlight-keyword">public</span> EffectTechniqueDescription GetDescription(Effect effect, EffectTechnique technique)
    {
      <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
    }

    <span class="highlight-keyword">public</span> EffectParameterDescription GetDescription(Effect effect, EffectParameter parameter)
    {
      <span class="highlight-comment">// This method is called for each effect parameter when a new effect is loaded.</span>
      <span class="highlight-comment">// Let's look for float parameters that are named "RandomValue" or have a semantic</span>
      <span class="highlight-comment">// "RandomValue".</span>
      <span class="highlight-keyword">if</span> (parameter.ParameterClass == EffectParameterClass.Scalar 
          &amp;&amp; parameter.ParameterType == EffectParameterType.Single
          &amp;&amp; (<span class="highlight-keyword">string</span>.Equals(parameter.Name, <span class="highlight-literal">"RandomValue"</span>, StringComparison.OrdinalIgnoreCase)
             || <span class="highlight-keyword">string</span>.Equals(parameter.Semantic, <span class="highlight-literal">"RandomValue"</span>, StringComparison.OrdinalIgnoreCase)))
      {
        <span class="highlight-comment">// Parameter found. Let's set a new effect parameter description.        </span>
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> EffectParameterDescription(parameter, <span class="highlight-literal">"RandomValue"</span>, <span class="highlight-number">0</span>, EffectParameterHint.PerInstance);
      }

      <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
    }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHABAAA");</script><p>
                    Second, a new
                    <a href="b5c05405-03b1-9ef7-7ec5-9ea40af2e50a.htm">IEffectBinder</a>
                    needs to be implemented:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAFABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> DigitalRune.Graphics;
<span class="highlight-keyword">using</span> DigitalRune.Graphics.Effects;
<span class="highlight-keyword">using</span> Microsoft.Xna.Framework.Graphics;

<span class="highlight-keyword">namespace</span> MyGame
{
  <span class="highlight-keyword">class</span> CustomEffectBinder : IEffectBinder
  {
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> Random Random = <span class="highlight-keyword">new</span> Random(<span class="highlight-number">12345</span>);

    <span class="highlight-keyword">public</span> EffectTechniqueBinding GetBinding(Effect effect)
    {
      <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
    }

    <span class="highlight-keyword">public</span> EffectParameterBinding GetBinding(Effect effect, EffectParameter parameter, IDictionary&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt; opaqueData)
    {    
      <span class="highlight-keyword">var</span> description = effect.GetParameterDescriptions()[parameter];
      <span class="highlight-keyword">if</span> (description.Semantic == <span class="highlight-literal">"RandomValue"</span>)
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> DelegateParameterBinding&lt;<span class="highlight-keyword">float</span>&gt;(effect, parameter, GetRandomValue);

      <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">float</span> GetRandomValue(DelegateParameterBinding&lt;<span class="highlight-keyword">float</span>&gt; binding, RenderContext context)
    {
      <span class="highlight-keyword">return</span> (<span class="highlight-keyword">float</span>)Random.NextDouble();
    }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFABAAA");</script><p>
                    The effect interpreter and binder need to be registered in the graphics service:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">_graphicsManager.EffectInterpreters.Insert(<span class="highlight-number">0</span>, <span class="highlight-keyword">new</span> CustomEffectInterpreter());
_graphicsManager.EffectBinders.Insert(<span class="highlight-number">0</span>, <span class="highlight-keyword">new</span> CustomEffectBinder());</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABAAA");</script><p>
                    Now, whenever a new effect is loaded, the new effect interpreter is called and searches
                    for the new type of parameter. If a matching parameter is found, a new parameter
                    description is set.
                </p><p>
                    Once all effect parameters are identified, the new effect binder is called. It searches
                    for a parameter with the newly created description. If a matching parameter is found, it
                    creates a new parameter binding.
                </p><p>
                    During rendering the effect parameter binding is evaluated for each visible mesh node.
                    The binding creates a random number and sets the parameter value.
                </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="ba1be841-af9c-41a4-8348-0b6bd92efdd9.htm">Effects and Effect Bindings</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>