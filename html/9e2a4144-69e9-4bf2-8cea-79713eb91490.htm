<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Resource Pooling</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="9e2a4144-69e9-4bf2-8cea-79713eb91490" /><meta name="Description" content="The DigitalRune Base library provides a general implementation of a resource pool. This section explains the concept of a resource pool and why it is necessary." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="dc44c3a5-8545-4253-9da1-62258a00607c.htm" title="DigitalRune Base Library" tocid="dc44c3a5-8545-4253-9da1-62258a00607c">DigitalRune Base Library</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="09d39ddf-c826-4943-aac8-2ef9e16e5a12.htm" title="Parallel Tasks (Multithreading)" tocid="09d39ddf-c826-4943-aac8-2ef9e16e5a12">Parallel Tasks (Multithreading)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="9e2a4144-69e9-4bf2-8cea-79713eb91490.htm" title="Resource Pooling" tocid="9e2a4144-69e9-4bf2-8cea-79713eb91490">Resource Pooling</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ce7bca46-717a-4dfb-a154-acb6ee1e8ad9.htm" title="Service Location and Inversion of Control" tocid="ce7bca46-717a-4dfb-a154-acb6ee1e8ad9">Service Location and Inversion of Control</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6736e3bc-383c-4d80-a828-c83fea5c3461.htm" title="Performance Profiling" tocid="6736e3bc-383c-4d80-a828-c83fea5c3461">Performance Profiling</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="120bed13-f23b-4774-bae7-d64d410d2122.htm" title="Storage and Virtual File Systems" tocid="120bed13-f23b-4774-bae7-d64d410d2122">Storage and Virtual File Systems</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3b7ea45b-f13c-49b3-961b-42899323a477.htm" title="&quot;How To&quot; Articles" tocid="3b7ea45b-f13c-49b3-961b-42899323a477">"How To" Articles</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="dba0bb78-681c-4dd0-b84b-91ce08eeea36.htm" title="Class Diagrams" tocid="dba0bb78-681c-4dd0-b84b-91ce08eeea36">Class Diagrams</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Resource Pooling</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
                The DigitalRune Base library provides a general implementation of a
                resource pool. This section explains the concept of a resource pool and
                why it is necessary.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#ResourcePooling">Resource pooling</a></li><li class="outlineSectionEntry"><a href="#Generic">ResourcePool&lt;T&gt;</a></li><li class="outlineSectionEntry"><a href="#GenericCollections">Resource pools for generic collections</a></li><li class="outlineSectionEntry"><a href="#ThreadSafety">Thread-safety</a></li><li class="outlineSectionEntry"><a href="#GlobalControl">Global control</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="ResourcePooling"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Resource pooling</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
                    The current version of the .NET Compact Framework has some limitations compared to the full version
                    of the .NET Framework. In particular, it does not support generational garbage collection. A run of
                    the garbage collector on the Xbox 360 or on the Windows Phone 7 typically has a higher latency than
                    in Windows and can lead to significant frame rate drops.
                </p><p>
                    Therefore, it is crucial to reduce the amount of memory that is allocated at runtime to avoid too
                    frequent garbage collections. A strategy to reduce memory allocations is
                    <em>resource pooling</em> (or <em>free-lists</em>). When
                    using a resource pool objects are acquired from the pool instead of being newly allocated on the
                    managed heap. When an object is no longer used it is returned to the resource pool for later reuse.
                </p></div><div class="collapsibleAreaRegion" id="Generic"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />ResourcePool&lt;T&gt;</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    The DigitalRune Base library contains a general implementation of a
                    resource pool: see <a href="c66285dd-f24e-3c3f-9beb-0fd1e564475e.htm">ResourcePool<span id="LST3E916119_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST3E916119_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
                    Other DigitalRune projects, such as DigitalRune Geometry and Physics, make extensive use
                    of this class. For example, the collision detection in DigitalRune Geometry creates and removes
                    contacts every frame. The type that stores the contact information is reused using a resource pool
                    to minimize the number of newly allocated objects.
                </p><p>
                    Here is an example how to create a resource pool for an object of type <strong>ObjectXyz</strong>:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAFAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAFAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAFAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAFAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">ResourcePool&lt;ObjectXyz&gt; Pool = <span class="highlight-keyword">new</span> ResourcePool&lt;ObjectXyz&gt;(
  () =&gt; <span class="highlight-keyword">new</span> ObjectXyz(),      <span class="highlight-comment">// Create the object.</span>
  obj =&gt; obj.Initialize(),    <span class="highlight-comment">// Initialize the object. (Optional)</span>
  obj =&gt; obj.Uninitialize()); <span class="highlight-comment">// Uninitialize the object. (Optional)</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAFAEAAA");</script><p>
                    The constructor of the <a href="c66285dd-f24e-3c3f-9beb-0fd1e564475e.htm">ResourcePool<span id="LST3E916119_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST3E916119_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
                    requires 3 parameters: A create callback, an initialize callback and an uninitialize callback.
                    In the example above the callbacks are implemented using lambda expressions. The initialize
                    and the uninitialize callbacks are optional. (The last two parameters can be <span class="code">null</span>.)
                </p><p>
                    Using this resource pool objects of the given type can be obtained when needed and recycled after use:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EACAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> obj = Pool.Obtain();

<span class="highlight-comment">// Do something with the object.</span>
...

<span class="highlight-comment">// Return the object to the resource pool when no longer needed.</span>
Pool.Recycle(obj);
obj = <span class="highlight-keyword">null</span>;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACAEAAA");</script><p>
                    Resource pools are initially empty. New objects are created on demand – so a
                    resource pool never runs out of objects.
                </p><p>
                    By consistently using the resource pool and the Obtain/Recycle pattern throughout
                    the application unnecessary garbage can be avoided.
                </p></div><div class="collapsibleAreaRegion" id="GenericCollections"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Resource pools for generic collections</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
                    In some situations we temporarily need a collection of a certain type
                    (e.g. a <span class="code">List&lt;T&gt;</span>). It is not necessary to manually
                    create a new resource pool for every type <span class="code">T</span>. The
                    static class <a href="18c78b33-5464-b2ad-ca98-42f62e7b22c8.htm">ResourcePools<span id="LST3E916119_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST3E916119_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
                    provides resource pools for common types of collections (lists, hash-sets, stacks).
                </p><p>
                    Here is an example that shows how to obtain a <span class="code">List&lt;float&gt;</span>
                    from the global resource pool.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Obtain an empty list from the global resource pool. </span>
List&lt;<span class="highlight-keyword">float</span>&gt; list = ResourcePools&lt;<span class="highlight-keyword">float</span>&gt;.Lists.Obtain(); 

<span class="highlight-comment">// Do something with the list. </span>
... 

<span class="highlight-comment">// After use, recycle the list. (Note: It is not necessary to clear the </span>
<span class="highlight-comment">// list before recycling. This is handled automatically.) </span>
ResourcePools&lt;<span class="highlight-keyword">float</span>&gt;.Lists.Recycle(list);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="ThreadSafety"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Thread-safety</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
                    The implementation of <a href="c66285dd-f24e-3c3f-9beb-0fd1e564475e.htm">ResourcePool<span id="LST3E916119_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST3E916119_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
                    is thread-safe. Multiple threads can simultaneously obtain/recycle objects from the same resource pool.
                </p><p>
                    Additionally, the current implementation is lock free – for the most parts. Locks can be
                    expensive, we therefore tried to avoid locks whenever possible for optimal performance.
                    (Internally, all threads have a local resource pool to prevent contention when multiple
                    threads need to access the same resource. If one thread’s local pool is empty it tries
                    to steal resources from another thread. But users don’t have to worry about these internals.)
                </p></div><div class="collapsibleAreaRegion" id="GlobalControl"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Global control</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
                    The base class <a href="33baf975-46a6-d8fc-f79e-3de598a71dda.htm">ResourcePool</a>
                    provides global control over all resource pools. For example,
                </p><ul><li>
                        By setting <a href="61d5ada1-4967-11a8-c303-ce6404175c8b.htm">ResourcePool<span id="LST3E916119_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Enabled</a>
                        to <span class="code">false</span>, resource pooling can be disabled in the entire application.
                        (The property is <span class="code">true</span> by default.)
                    </li><li><a href="39580b43-eaf8-3c3a-13f1-e3790e96c09d.htm">ResourcePool<span id="LST3E916119_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ClearAll<span id="LST3E916119_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_10?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
                        can be called to clear all resource pools in the application. This is useful because different
                        parts of an application might have a different memory usage. One level in a game might be very
                        physics intensive and thereby fill up the resource pools of the physics simulations. The next
                        level might be very graphics intensive and fill up other resource pools. It can be useful to
                        clear all resource pools when loading a new level to start with a clean memory. In particular,
                        if you ever call <span class="code">GC.Collect()</span> manually, you should consider calling
                        <a href="39580b43-eaf8-3c3a-13f1-e3790e96c09d.htm">ResourcePool<span id="LST3E916119_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ClearAll<span id="LST3E916119_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_12?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
                        before running the garbage collector. (Note that you can also clear individual pools by calling
                        <a href="d2cbf4db-190d-6314-fd04-6ad7eab7a73c.htm">ResourcePool<span id="LST3E916119_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Clear<span id="LST3E916119_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_14?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)
                    </li><li><a href="8e82e62e-6d07-7bdb-5d6c-4631324842f9.htm">ResourcePool<span id="LST3E916119_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_15?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Pools</a>
                        is a collection containing all active resource pools of the application. This property might be
                        useful during debugging to observe memory usage. (Resource pools are automatically registered.
                        Internally the resource pools are stored using weak reference. So you do not need to worry that
                        obsolete resource pools are accidentally kept alive.)
                    </li></ul></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="c66285dd-f24e-3c3f-9beb-0fd1e564475e.htm">DigitalRune<span id="LST3E916119_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_16?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ResourcePool<span id="LST3E916119_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_17?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST3E916119_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E916119_18?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="dc44c3a5-8545-4253-9da1-62258a00607c.htm">DigitalRune Base Library</a></div><div class="seeAlsoStyle"><a href="ea2eddc5-2628-4671-83cd-33fe38daaf4e.htm">How To: Enable Resource Pooling for an Object</a></div></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>