<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Screen-Door Transparency</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="fa431d48-b457-4c70-a590-d44b0840ab1e" /><meta name="Description" content="Screen-door transparency is a technique to fake transparency." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0a8eb9ca-74ae-4746-9289-93d909b07e22.htm" title="DigitalRune Graphics" tocid="0a8eb9ca-74ae-4746-9289-93d909b07e22">DigitalRune Graphics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7a376fe-d747-4c66-ad76-2bc95232af85.htm" title="Articles" tocid="a7a376fe-d747-4c66-ad76-2bc95232af85">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a089a32a-ee98-4490-8a3c-9df6beb0b1c1.htm" title="How To: Add DigitalRune Graphics to a Project" tocid="a089a32a-ee98-4490-8a3c-9df6beb0b1c1">How To: Add DigitalRune Graphics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="578746ac-7e3c-42b5-b9c9-6900714c966e.htm" title="How To: Add a Custom Scene Node" tocid="578746ac-7e3c-42b5-b9c9-6900714c966e">How To: Add a Custom Scene Node</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="66ba3eee-84a2-4ff2-935f-77b0afa44a89.htm" title="How To: Change Effect Parameter Bindings" tocid="66ba3eee-84a2-4ff2-935f-77b0afa44a89">How To: Change Effect Parameter Bindings</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c2b20686-df99-4d21-b5b6-fd7d58a5f407.htm" title="How To: Add Support for New Effect Parameters" tocid="c2b20686-df99-4d21-b5b6-fd7d58a5f407">How To: Add Support for New Effect Parameters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="12ff9049-3aea-4b01-affe-3aa37eea9ce2.htm" title="Cloud Quads" tocid="12ff9049-3aea-4b01-affe-3aa37eea9ce2">Cloud Quads</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1683bd3a-951a-4e79-b43e-ed0f3ee00e31.htm" title="Environment Map Reflections" tocid="1683bd3a-951a-4e79-b43e-ed0f3ee00e31">Environment Map Reflections</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9a8c8b37-b996-477a-aeab-5d92714be3ca.htm" title="Material Capture (MatCap) Shaders" tocid="9a8c8b37-b996-477a-aeab-5d92714be3ca">Material Capture (MatCap) Shaders</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c9764263-9fc9-43cf-86cb-11daa5090dc2.htm" title="Parallax Mapping" tocid="c9764263-9fc9-43cf-86cb-11daa5090dc2">Parallax Mapping</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7f44f475-cacd-42d1-8c7d-db6429029245.htm" title="Refraction Rendering" tocid="7f44f475-cacd-42d1-8c7d-db6429029245">Refraction Rendering</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="fa431d48-b457-4c70-a590-d44b0840ab1e.htm" title="Screen-Door Transparency" tocid="fa431d48-b457-4c70-a590-d44b0840ab1e">Screen-Door Transparency</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Screen-Door Transparency</td></tr></table><span class="introStyle"></span><div class="introduction"><p><span class="term">Screen-door transparency</span> is a technique to fake transparency.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#ScreenDoorTransparency">What is screen-door transparency</a></li><li class="outlineSectionEntry"><a href="#Implementation">How to implement screen-door transparency</a></li><li class="outlineSectionEntry"><a href="#DigitalRune">Screen-door transparency in DigitalRune Graphics</a></li><li class="outlineSectionEntry"><a href="#References">References</a></li></ul></div><div class="collapsibleAreaRegion" id="ScreenDoorTransparency"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />What is screen-door transparency</span></div><div id="ID0RBSection" class="collapsibleSection"><p><span class="term">Alpha blending</span> can be problematic in some cases:
                </p><ul><li>
                        No depth writes, objects needs to be sorted by distance.
                    </li><li>
                        Does not play well with deferred shading.
                    </li></ul><p><span class="term">Screen-door transparency</span> (also called
                    <span class="term">screen space stipple</span>,
                    <span class="term">stipple patterns</span>,
                    <span class="term">dissolve</span>,
                    <span class="term">fizzle</span>,
                    etc.) uses alpha testing to fake transparency. The effect is fast and cheap:
                </p><ul><li>
                        No alpha blending.
                    </li><li>
                        Pixels are written to the depth buffer, no sorting required.
                    </li><li>
                        Can easily be added to most materials.
                    </li></ul><p>
                    The downside is that the results contain obvious pixel patterns.
                </p><p>
                    DigitalRune Graphics uses screen-door transparency to fade-out objects near the max
                    draw distance and to blend between levels of detail (LODs). The pixel patterns are less
                    noticeable in these situations.
                </p><div class="mediaNear"><img alt="Screen-Door Transparency" src="../media/Screen-Door-Transparency.gif" /><div class="caption">An object is faded out using screen-door transparency</div></div></div><div class="collapsibleAreaRegion" id="Implementation"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />How to implement screen-door transparency</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    Implementing screen-door transparency in a pixel shader is relatively simple: One only
                    needs to take the pixel's alpha and discard the pixel if it is below a certain
                    threshold.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAFADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAFADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAFADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAFADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Screen-door transparency: Discard pixel if below threshold.</span>
<span class="highlight-keyword">float</span> threshold = <span class="highlight-number">0.5</span>;
clip(alpha - threshold);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAFADAAA");</script><p>
                    If the same threshold is used for all pixels, then the object has two states: It is
                    either visible or invisible. But if we use different thresholds per pixel we can create
                    multiple states. In the following example we use 16 different thresholds for each
                    4 x 4 block of pixels:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EADADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EADADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Screen-door transparency: Discard pixel if below threshold.</span>
<span class="highlight-comment">// (Note: pos is pixel position.)</span>
float4x4 thresholdMatrix =
{
<span class="highlight-number">1.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">9.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">3.0</span> / <span class="highlight-number">17.0</span>, <span class="highlight-number">11.0</span> / <span class="highlight-number">17.0</span>,
<span class="highlight-number">13.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">5.0</span> / <span class="highlight-number">17.0</span>, <span class="highlight-number">15.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">7.0</span> / <span class="highlight-number">17.0</span>,
<span class="highlight-number">4.0</span> / <span class="highlight-number">17.0</span>, <span class="highlight-number">12.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">2.0</span> / <span class="highlight-number">17.0</span>, <span class="highlight-number">10.0</span> / <span class="highlight-number">17.0</span>,
<span class="highlight-number">16.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">8.0</span> / <span class="highlight-number">17.0</span>, <span class="highlight-number">14.0</span> / <span class="highlight-number">17.0</span>,  <span class="highlight-number">6.0</span> / <span class="highlight-number">17.0</span>
};

clip(alpha - thresholdMatrix[pos.x % <span class="highlight-number">4</span>][pos.y % <span class="highlight-number">4</span>]);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADADAAA");</script><p>
                    With 4 x 4 threshold values, it is possible to create 17 states: visible, invisible,
                    and 15 patterns in between. The result is shown in the image above.
                </p><p>
                    The threshold matrix used in this example is the same matrix as used by
                    <span class="term">ordered dithering</span> [1]. It is also known as
                    <span class="term">index matrix</span> or
                    <span class="term">Bayer matrix</span>.
                    Dither matrices are nice because they create regular patterns. But in
                    theory, any random permutation of threshold values should do.
                </p><p>
                    To create more states, we need bigger matrices. For example, with 16 x 16 threshold
                    values we can create 257 states. (To create a regular 16 x 16 dither
                    pattern, the information in [2] and the corresponding code example [3] can be very
                    helpful.)
                </p></div><div class="collapsibleAreaRegion" id="DigitalRune"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Screen-door transparency in DigitalRune Graphics</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading" id="Materials">Materials</h4><div class="subsection"><p>
                            Several <a href="fda15306-d5dc-449c-850d-82227359d35b.htm">Predefined Effects</a> support
                            screen-door transparency:
                        </p><ul><li><em>DigitalRune/Materials/GBufferTransparent</em></li><li><em>DigitalRune/Materials/GBufferNormalTransparent</em></li><li><em>DigitalRune/Materials/MaterialTransparent</em></li></ul><p>
                            Screen-door transparency is also used in the <span class="term">InstancingSample</span>
                            (see <a href="dde51686-4f07-4c54-95d4-756ec929cb57.htm">Samples</a>).
                        </p></div><h4 class="subHeading" id="LOD">Distance culling and LOD blending</h4><div class="subsection"><p>
                            Screen-door transparency can be used to fade out objects near the max draw
                            distance and to blend between LODs. This is demonstrated in the
                            <span class="term">LodBlendingSample</span> (see
                            <a href="dde51686-4f07-4c54-95d4-756ec929cb57.htm">Samples</a>).
                        </p></div></div><div class="collapsibleAreaRegion" id="References"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />References</span></div><div id="ID4RBSection" class="collapsibleSection"><ul class="noBullet"><li>
                        [1] Ordered Dithering,
                        <a href="http://en.wikipedia.org/wiki/Ordered_dithering" target="_blank">http://en.wikipedia.org/wiki/Ordered_dithering</a></li><li>
                        [2] Ordered Dithering, Graphics Gems II edited by James Arvo, Academic Press, 1991, pp. 73
                    </li><li>
                        [3] dither.c,
                        <a href="http://tog.acm.org/resources/GraphicsGems/gemsii/dither/dither.c" target="_blank">http://tog.acm.org/resources/GraphicsGems/gemsii/dither/dither.c</a></li></ul></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>