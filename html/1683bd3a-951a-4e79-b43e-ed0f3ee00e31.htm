<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Environment Map Reflections</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="1683bd3a-951a-4e79-b43e-ed0f3ee00e31" /><meta name="Description" content="The EnvironmentLightSample is outdated. Image-based lighting (IBL) is now an integrated part of DigitalRune Graphics. See IBL examples for more information." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DigitalRune Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="38bd0f53-477c-48c5-91cc-b9fb7062ceb3.htm" title="DigitalRune Documentation" tocid="roottoc">DigitalRune Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0a8eb9ca-74ae-4746-9289-93d909b07e22.htm" title="DigitalRune Graphics" tocid="0a8eb9ca-74ae-4746-9289-93d909b07e22">DigitalRune Graphics</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a7a376fe-d747-4c66-ad76-2bc95232af85.htm" title="Articles" tocid="a7a376fe-d747-4c66-ad76-2bc95232af85">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a089a32a-ee98-4490-8a3c-9df6beb0b1c1.htm" title="How To: Add DigitalRune Graphics to a Project" tocid="a089a32a-ee98-4490-8a3c-9df6beb0b1c1">How To: Add DigitalRune Graphics to a Project</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="578746ac-7e3c-42b5-b9c9-6900714c966e.htm" title="How To: Add a Custom Scene Node" tocid="578746ac-7e3c-42b5-b9c9-6900714c966e">How To: Add a Custom Scene Node</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="66ba3eee-84a2-4ff2-935f-77b0afa44a89.htm" title="How To: Change Effect Parameter Bindings" tocid="66ba3eee-84a2-4ff2-935f-77b0afa44a89">How To: Change Effect Parameter Bindings</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c2b20686-df99-4d21-b5b6-fd7d58a5f407.htm" title="How To: Add Support for New Effect Parameters" tocid="c2b20686-df99-4d21-b5b6-fd7d58a5f407">How To: Add Support for New Effect Parameters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="12ff9049-3aea-4b01-affe-3aa37eea9ce2.htm" title="Cloud Quads" tocid="12ff9049-3aea-4b01-affe-3aa37eea9ce2">Cloud Quads</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="1683bd3a-951a-4e79-b43e-ed0f3ee00e31.htm" title="Environment Map Reflections" tocid="1683bd3a-951a-4e79-b43e-ed0f3ee00e31">Environment Map Reflections</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9a8c8b37-b996-477a-aeab-5d92714be3ca.htm" title="Material Capture (MatCap) Shaders" tocid="9a8c8b37-b996-477a-aeab-5d92714be3ca">Material Capture (MatCap) Shaders</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c9764263-9fc9-43cf-86cb-11daa5090dc2.htm" title="Parallax Mapping" tocid="c9764263-9fc9-43cf-86cb-11daa5090dc2">Parallax Mapping</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7f44f475-cacd-42d1-8c7d-db6429029245.htm" title="Refraction Rendering" tocid="7f44f475-cacd-42d1-8c7d-db6429029245">Refraction Rendering</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="fa431d48-b457-4c70-a590-d44b0840ab1e.htm" title="Screen-Door Transparency" tocid="fa431d48-b457-4c70-a590-d44b0840ab1e">Screen-Door Transparency</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="DigitalRune" src="../icons/DigitalRune-Logo.png" /></td><td class="titleColumn">Environment Map Reflections</td></tr></table><span class="introStyle"></span><div class="introduction"><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Caution note" /> Caution</th></tr><tr><td><p>
                    The <em>EnvironmentLightSample</em> is outdated.
                    Image-based lighting (IBL) is now an integrated part of DigitalRune Graphics.
                    See IBL examples for more information.
                </p></td></tr></table></div><p>
                The <em>EnvironmentLightSample</em> (see
                <a href="dde51686-4f07-4c54-95d4-756ec929cb57.htm">Samples</a>) shows how to implement a new
                light type which adds environment map reflections to all materials in the scene.
                This article provides additional background information and explanations.
            </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Screenshot">Screenshot</a></li><li class="outlineSectionEntry"><a href="#Traditional">Traditional approach: Environment mapping using new materials</a></li><li class="outlineSectionEntry"><a href="#Deferred">Deferred lighting approach: Environment mapping using a new light type</a></li><li class="outlineSectionEntry"><a href="#References">References</a></li></ul></div><div class="collapsibleAreaRegion" id="Screenshot"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Screenshot</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
                    Here are some screenshots from the new EnvironmentLightSample. Several objects show
                    reflections. (The reflected environment map is the same as the sky box.)
                </p><div class="mediaNear"><img alt="Environment Light" src="../media/EnvironmentLight.jpg" /><div class="caption">
                        Screenshot: The spheres, cubes, ground and armor of the dude reflect the environment
                        map.
                    </div></div></div><div class="collapsibleAreaRegion" id="Traditional"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Traditional approach: Environment mapping using new materials</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
                    The usual method to add environment mapping is:
                </p><ol><li>
                        Create a new HLSL effect which implements environment mapping.
                    </li><li>
                            Assign this effect to a mesh. In the DigitalRune Engine, you do this by editing
                            the DigitalRune material file (*.drmat) of a model.
                    </li></ol><p>
                    This is approach is cumbersome because you need to create many variants of
                    the effect (env map, env map + skinned, env map + normal map + alpha test, ...) and
                    manually assign the effect to meshes.
                </p><p>
                    Deferred lighting allows a more efficient solution because lighting and shading
                    are decoupled.
                </p></div><div class="collapsibleAreaRegion" id="Deferred"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Deferred lighting approach: Environment mapping using a new light type</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
                    Deferred rendering allows us to use a more practical method. The EnvironmentLightSample
                    shows how to implement a new light type and a renderer for the light. The new light type
                    adds environment map reflections to all deferred materials. Even glossy reflections
                    can be created using the mipmaps of the environment map. For this approach you need
                    to understand a few basic observations:
                </p><ul><li><p><strong>Deferred lighting decouples light accumulation and material rendering:</strong>
                            In a deferred rendering pipeline we can create new light types without changing
                            material shaders (except forward rendered, alpha-blended materials). To add a
                            custom light type, you only need to write a new
                            <a href="5e85f9df-dd8f-a1c2-34d4-1407f412f165.htm">Light</a>
                            class and a
                            <a href="c022a3a4-2330-9b46-24ad-c8f3ae13f1f8.htm">SceneNodeRenderer</a>
                            which handles
                            <a href="100df524-cf31-0d95-6828-c31c838355cd.htm">LightNode</a>s
                            with the custom
                            <a href="5e85f9df-dd8f-a1c2-34d4-1407f412f165.htm">Light</a>
                            type.
                        </p></li><li><p><strong>Reflections = indirect specular lighting:</strong>
                            An environment map basically captures the light that falls onto an object from all
                            directions. This light does not only affect special, user-selected materials - all
                            materials reflect this light! The specular color of a material defines how much of
                            this light should be reflected and whether the reflected light is tinted.
                        </p></li><li><p><strong>Mipmap levels can be used to create glossy reflections. </strong>
                            The specular power (a.k.a. specular exponent, roughness, smoothness, glossiness,
                            shininess, etc.) of a material defines how sharp the reflected image should be.
                            Mirror-like materials have a very high specular power. Dull, diffuse materials have a
                            low specular power. The mipmap levels of the environment map contain increasingly
                            blurred versions of the original image. To create glossy (blurry) reflections, we
                            can sample higher mipmap levels of the environment map. McGuire et al.[1] have
                            recently shown how to compute the required mipmap level for a given specular power.
                        </p></li></ul></div><div class="collapsibleAreaRegion" id="References"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />References</span></div><div id="ID3RBSection" class="collapsibleSection"><ul class="noBullet"><li>
                            [1] M. McGuire, D. Evangelakos, J. Wilcox, S. Donow, M. Mara: Plausible Blinn-Phong
                            Reflection of Standard Cube MIP-Maps. Technical report CSTR201301, Williams College
                            Department of Computer Science,
                            <a href="http://graphics.cs.williams.edu/papers/EnvMipReport2013/" target="_blank">http://graphics.cs.williams.edu/papers/EnvMipReport2013/</a>.
                    </li></ul></div></div></div><div id="pageFooter" class="pageFooter">Copyright (c) 2006-2016 DigitalRune GmbH. All rights reserved. (Last updated: 2016-03-10)<p><a href="http://www.digitalrune.com/" target="_blank">http://www.digitalrune.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40digitalrune.com?Subject=DigitalRune Documentation">office@digitalrune.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>